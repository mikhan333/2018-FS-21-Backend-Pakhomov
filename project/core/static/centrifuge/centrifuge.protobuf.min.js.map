{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///centrifuge.protobuf.min.js","webpack:///webpack/bootstrap 933b3e14fcbd4d603172","webpack:///./node_modules/protobufjs/src/util.js","webpack:///./node_modules/protobufjs/src/enum.js","webpack:///./node_modules/protobufjs/src/util/minimal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/protobufjs/src/object.js","webpack:///./node_modules/protobufjs/src/field.js","webpack:///./node_modules/events/events.js","webpack:///./src/utils.js","webpack:///./node_modules/protobufjs/src/namespace.js","webpack:///./node_modules/protobufjs/src/types.js","webpack:///./src/centrifuge.js","webpack:///./src/subscription.js","webpack:///./src/json.js","webpack:///./node_modules/protobufjs/src/writer.js","webpack:///./node_modules/protobufjs/src/reader.js","webpack:///./node_modules/protobufjs/src/oneof.js","webpack:///./node_modules/protobufjs/src/message.js","webpack:///./node_modules/@protobufjs/aspromise/index.js","webpack:///./node_modules/@protobufjs/inquire/index.js","webpack:///./node_modules/protobufjs/src/rpc.js","webpack:///./node_modules/protobufjs/src/roots.js","webpack:///./node_modules/protobufjs/src/encoder.js","webpack:///./node_modules/protobufjs/src/type.js","webpack:///./node_modules/protobufjs/src/mapfield.js","webpack:///./node_modules/protobufjs/src/service.js","webpack:///./node_modules/protobufjs/src/method.js","webpack:///./node_modules/protobufjs/src/decoder.js","webpack:///./node_modules/protobufjs/src/verifier.js","webpack:///./node_modules/protobufjs/src/converter.js","webpack:///./node_modules/protobufjs/src/wrappers.js","webpack:///./node_modules/protobufjs/src/root.js","webpack:///./src/index_protobuf.js","webpack:///./src/protobuf.js","webpack:///./node_modules/protobufjs/light.js","webpack:///./node_modules/protobufjs/src/index-light.js","webpack:///./node_modules/protobufjs/src/index-minimal.js","webpack:///./node_modules/@protobufjs/base64/index.js","webpack:///./node_modules/@protobufjs/eventemitter/index.js","webpack:///./node_modules/@protobufjs/float/index.js","webpack:///./node_modules/@protobufjs/utf8/index.js","webpack:///./node_modules/@protobufjs/pool/index.js","webpack:///./node_modules/protobufjs/src/util/longbits.js","webpack:///./node_modules/protobufjs/src/writer_buffer.js","webpack:///./node_modules/protobufjs/src/reader_buffer.js","webpack:///./node_modules/protobufjs/src/rpc/service.js","webpack:///./node_modules/@protobufjs/codegen/index.js","webpack:///./node_modules/@protobufjs/fetch/index.js","webpack:///./node_modules/@protobufjs/path/index.js","webpack:///./src/client.proto.json"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Type","Enum","util","roots","codegen","fetch","path","fs","inquire","toArray","keys","array","Array","length","index","toObject","key","val","undefined","safePropBackslashRe","safePropQuoteRe","isReserved","test","safeProp","prop","replace","ucFirst","str","charAt","toUpperCase","substring","camelCaseRe","camelCase","$0","$1","compareFieldsById","a","b","id","decorateType","ctor","typeName","$type","decorateRoot","remove","add","type","value","decorateEnumIndex","decorateEnum","enm","values","options","comment","comments","ReflectionObject","TypeError","valuesById","create","reserved","constructor","className","Namespace","fromJSON","json","toJSON","toJSONOptions","keepComments","Boolean","isString","isInteger","Error","isReservedId","isReservedName","allow_alias","global","merge","dst","src","ifNotSet","newError","CustomError","message","properties","captureStackTrace","stack","toString","asPromise","base64","EventEmitter","float","utf8","pool","LongBits","emptyArray","freeze","emptyObject","isNode","process","versions","node","Number","isFinite","Math","floor","String","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","longs","enums","bytes","_configure","encoding","allocUnsafe","size","g","Function","eval","window","parent","resolved","filename","Root","defineProperties","ptr","fullName","unshift","join","onAdd","_handleAdd","onRemove","_handleRemove","resolve","getOption","setOption","setOptions","Root_","Field","rule","extend","ruleRe","required","optional","repeated","map","partOf","typeDefault","defaultValue","long","types","resolvedType","extensionField","declaringField","_packed","defaults","lookupTypeOrEnum","packed","fromNumber","buf","decode","write","fieldId","fieldType","fieldRule","fieldName","default","Type_","_events","_maxListeners","isFunction","arg","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","emit","er","handler","len","args","listeners","error","arguments","err","context","slice","apply","addListener","listener","newListener","push","warned","console","trace","on","once","removeListener","fired","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","startsWith","prefix","lastIndexOf","log","level","logger","backoff","step","min","max","jitter","random","interval","pow","errorExists","data","arrayToJSON","nested","_nestedArray","clearCache","namespace","Service","addJSON","nestedArray","nestedJson","ns","names","fields","methods","getEnum","prev","split","part","shift","resolveAll","lookup","filterTypes","parentAlreadyChecked","found","indexOf","lookupType","lookupEnum","lookupService","Service_","bake","offset","basic","mapKey","_interopRequireDefault","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","writable","setPrototypeOf","__proto__","Centrifuge","_typeof","Symbol","iterator","_createClass","target","props","descriptor","protoProps","staticProps","_events2","_subscription","_subscription2","_json","_utils","_EventEmitter","url","_this","getPrototypeOf","_url","_sockjs","_isSockjs","_binary","_methodType","_pushType","_encoder","_decoder","_status","_reconnect","_reconnecting","_transport","_transportName","_transportClosed","_messageId","_clientID","_refreshRequired","_subs","_lastSeq","_lastGen","_lastEpoch","_messages","_isBatching","_isSubscribeBatching","_privateChannels","_numRefreshFailed","_refreshTimeout","_pingTimeout","_pongTimeout","_subRefreshTimeouts","_retries","_callbacks","_latency","_latencyStart","_connectData","_token","_config","debug","sockjs","promise","minRetry","maxRetry","timeout","ping","pingInterval","pongWaitTimeout","privateChannelPrefix","onTransportClose","sockjsServer","sockjsTransports","refreshEndpoint","refreshHeaders","refreshParams","refreshData","refreshAttempts","refreshInterval","onRefreshFailed","onRefresh","subscribeEndpoint","subscribeHeaders","subscribeParams","subRefreshInterval","onPrivateSubscribe","token","params","headers","callback","_this2","query","_debug","JSON","stringify","xhr","XMLHttpRequest","ActiveXObject","encodeURIComponent","open","withCredentials","setRequestHeader","headerName","onreadystatechange","readyState","status","parsed","parse","responseText","_log","setTimeout","send","WebSocket","format","_formatOverride","JsonMethodType","JsonPushType","JsonEncoder","JsonDecoder","configuration","assign","_setFormat","SockJS","newStatus","reconnect","_stopPing","callbacks","clearTimeout","errback","_createErrorObject","channel","sub","_isSuccess","_triggerUnsubscribe","_recover","_setSubscribing","_setUnsubscribed","_clearSubRefreshTimeout","commands","encodeCommands","_this3","sockjsOptions","transports","server","_websocketSupported","binaryType","onopen","transport","onheartbeat","_restartPing","msg","Date","_call","then","result","_connectResponse","decodeCommandResult","CONNECT","next","code","_disconnect","onerror","onclose","closeEvent","reason","needReconnect","advice","event","_getRetryInterval","_refresh","_connect","onmessage","_dataReceived","_this4","method","RPC","SEND","_callAsync","_this5","replies","decodeReplies","Promise","_dispatchReply","_addMessage","_this6","reject","_registerCall","isConnected","_setStatus","_setupTransport","shouldReconnect","_isDisconnected","_clearConnectedState","close","_this7","_refreshFailed","cb","resp","round","REFRESH","_refreshResponse","_refreshError","_ajax","_this8","_this9","expires","client","ttl","_this10","channelsData","channels","channelData","SUB_REFRESH","_getSub","_subRefreshResponse","_subRefreshError","_this11","subRefreshTimeout","_subRefresh","_this12","isResubscribe","_this13","_setNew","SUBSCRIBE","startSubscribeBatching","_subscribe","stopSubscribeBatching","_needRecover","recover","seq","_getLastSeq","gen","_getLastGen","epoch","_getLastEpoch","_subscribeResponse","_subscribeError","UNSUBSCRIBE","_this14","wasReconnecting","_resetRetry","getTime","startBatching","_shouldResubscribe","stopBatching","_startPing","ctx","latency","_this15","_isSubscribing","_setSubscribeError","_this16","recovered","_setSubscribeSuccess","pubs","publications","reverse","_handlePublication","recoverable","_recoverable","reply","leave","unsub","unsubscribe","resubscribe","subscribe","pub","decodePush","PUBLICATION","decodePushData","MESSAGE","_handleMessage","JOIN","_handleJoin","LEAVE","_handleLeave","UNSUB","_handleUnsub","_handleReply","_handlePush","messages","_transportSend","_this17","PING","_pingResponse","lastSeq","lastGen","lastEpoch","_this18","async","_nextMessageId","_isConnected","_ping","_flush","_this19","authChannels","batch","_ret2","events","currentSub","_setEvents","_isUnsubscribed","_STATE_NEW","Subscription","centrifuge","_centrifuge","_error","_isResubscribe","_ready","_subscriptionPromise","_noResubscribe","_initializePromise","_promises","_resolve","_reject","knownEvents","ev","successContext","_getSubscribeSuccessContext","to","errContext","_getSubscribeErrorContext","noResubscribe","needTrigger","subscribeErrorContext","_unsubscribe","subPromise","_isError","res","rej","_methodCall","PUBLISH","PRESENCE","PRESENCE_STATS","HISTORY","encodedCommands","encodedReplies","methodType","pushType","Op","fn","noop","State","writer","head","tail","states","Writer","writeByte","pos","writeVarint32","VarintOp","writeVarint64","writeFixed32","BufferWriter","alloc","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","set","string","fork","reset","ldelim","finish","BufferWriter_","indexOutOfRange","reader","writeLength","RangeError","Reader","buffer","readLongVarint","readFixed32_end","end","readFixed64","BufferReader","create_array","isBuffer","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","OneOf","oneof","fieldsArray","addFieldsToParent","field","oneofName","Message","encode","encodeDelimited","decodeDelimited","verify","fromObject","pending","moduleName","mod","genTypePartial","fieldIndex","ref","group","encoder","mtype","sort","_fieldsArray","keyType","oneofs","extensions","_fieldsById","_oneofsArray","_ctor","MapField","decoder","verifier","converter","wrappers","fieldsById","oneofsArray","generateConstructor","ctorProperties","inherited","filter","setup","wrapper","originalThis","bind","resolvedKeyType","fieldKeyType","fieldValueType","_methodsArray","service","Method","rpc","methodsArray","rpcImpl","requestDelimited","responseDelimited","rpcService","methodName","q","resolvedRequestType","resolvedResponseType","requestType","responseType","requestStream","responseStream","missing","rfield","invalid","expected","genVerifyValue","j","genVerifyKey","seenFirstField","oneofProp","genValuePartial_fromObject","isUnsigned","genValuePartial_toObject","repeatedFields","mapFields","normalFields","low","high","fromCharCode","hasKs2","type_url","substr","deferred","files","SYNC","tryHandleExtension","extendedType","sisterField","common","resolvePath","load","sync","source","imports","weakImports","queued","weak","idx","altname","readFileSync","loadSync","exposeRe","parse_","common_","_protobuf","CentrifugeProtobuf","ProtobufDecoder","ProtobufEncoder","protobuf","proto","methodValues","protobufMethodType","methodSchema","protobufPushType","PushSchema","Push","Command","Reply","command","_decode","_Centrifuge","build","configure","ceil","b64","s64","t","parts","chunk","charCodeAt","_listeners","evt","off","Float32Array","writeFloat_f32_cpy","f32","f8b","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","le","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","sign","exponent","LN2","mantissa","readFloat_ieee754","readUint","uint","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","writeDouble_f64_cpy","f64","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","c1","c2","SIZE","MAX","slab","zero","parseInt","fromString","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","copy","byteLength","utf8Slice","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","functionParams","functionName","Codegen","formatStringOrScope","verbose","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","body","functionNameOverride","readFile","contents","binary","overrideMimeType","isAbsolute","normalize","absolute","originPath","includePath","alreadyNormalized","MethodType","PushType","ClientInfo","user","connInfo","chanInfo","Publication","uid","info","Join","Leave","Unsub","ConnectRequest","ConnectResult","version","RefreshRequest","RefreshResult","SubscribeRequest","SubscribeResult","SubRefreshRequest","SubRefreshResult","UnsubscribeRequest","UnsubscribeResult","PublishRequest","PublishResult","PresenceRequest","PresenceResult","presence","PresenceStatsRequest","PresenceStatsResult","numClients","numUsers","HistoryRequest","HistoryResult","PingRequest","PingResult","RPCRequest","RPCResult","SendRequest"],"mappings":"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","file":"centrifuge.protobuf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Centrifuge\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Centrifuge\"] = factory();\n\telse\n\t\troot[\"Centrifuge\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 32);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = __webpack_require__(2);\r\n\r\nvar roots = __webpack_require__(20);\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = __webpack_require__(46);\r\nutil.fetch   = __webpack_require__(47);\r\nutil.path    = __webpack_require__(48);\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = __webpack_require__(22);\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = __webpack_require__(1);\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (__webpack_require__(30))());\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = __webpack_require__(8),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = __webpack_require__(17);\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = __webpack_require__(37);\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = __webpack_require__(38);\r\n\r\n// float handling accross browsers\r\nutil.float = __webpack_require__(39);\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = __webpack_require__(18);\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = __webpack_require__(40);\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = __webpack_require__(41);\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = __webpack_require__(42);\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = __webpack_require__(1),\r\n    types = __webpack_require__(9),\r\n    util  = __webpack_require__(0);\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startsWith = startsWith;\nexports.isFunction = isFunction;\nexports.log = log;\nexports.backoff = backoff;\nexports.errorExists = errorExists;\nfunction startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nfunction isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nfunction log(level, args) {\n  if (global.console) {\n    var logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nfunction backoff(step, min, max) {\n  var jitter = 0.5 * Math.random();\n  var interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nfunction errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Enum     = __webpack_require__(1),\r\n    Field    = __webpack_require__(5),\r\n    util     = __webpack_require__(0);\r\n\r\nvar Type,    // cyclic\r\n    Service; // \"\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\nNamespace._configure = function(Type_, Service_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n};\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = __webpack_require__(0);\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Centrifuge = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _subscription = __webpack_require__(11);\n\nvar _subscription2 = _interopRequireDefault(_subscription);\n\nvar _json = __webpack_require__(12);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _errorTimeout = 'timeout';\n\nvar Centrifuge = exports.Centrifuge = function (_EventEmitter) {\n  _inherits(Centrifuge, _EventEmitter);\n\n  function Centrifuge(url, options) {\n    _classCallCheck(this, Centrifuge);\n\n    var _this = _possibleConstructorReturn(this, (Centrifuge.__proto__ || Object.getPrototypeOf(Centrifuge)).call(this));\n\n    _this._url = url;\n    _this._sockjs = null;\n    _this._isSockjs = false;\n    _this._binary = false;\n    _this._methodType = null;\n    _this._pushType = null;\n    _this._encoder = null;\n    _this._decoder = null;\n    _this._status = 'disconnected';\n    _this._reconnect = true;\n    _this._reconnecting = false;\n    _this._transport = null;\n    _this._transportName = null;\n    _this._transportClosed = true;\n    _this._messageId = 0;\n    _this._clientID = null;\n    _this._refreshRequired = false;\n    _this._subs = {};\n    _this._lastSeq = {};\n    _this._lastGen = {};\n    _this._lastEpoch = {};\n    _this._messages = [];\n    _this._isBatching = false;\n    _this._isSubscribeBatching = false;\n    _this._privateChannels = {};\n    _this._numRefreshFailed = 0;\n    _this._refreshTimeout = null;\n    _this._pingTimeout = null;\n    _this._pongTimeout = null;\n    _this._subRefreshTimeouts = {};\n    _this._retries = 0;\n    _this._callbacks = {};\n    _this._latency = null;\n    _this._latencyStart = null;\n    _this._connectData = null;\n    _this._token = null;\n    _this._config = {\n      debug: false,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: ['websocket', 'xdr-streaming', 'xhr-streaming', 'eventsource', 'iframe-eventsource', 'iframe-htmlfile', 'xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling'],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    _this._configure(options);\n    return _this;\n  }\n\n  _createClass(Centrifuge, [{\n    key: 'setToken',\n    value: function setToken(token) {\n      this._token = token;\n    }\n  }, {\n    key: 'setConnectData',\n    value: function setConnectData(data) {\n      this._connectData = data;\n    }\n  }, {\n    key: '_ajax',\n    value: function _ajax(url, params, headers, data, callback) {\n      var _this2 = this;\n\n      var query = '';\n      this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n      var xhr = global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP');\n\n      for (var i in params) {\n        if (params.hasOwnProperty(i)) {\n          if (query.length > 0) {\n            query += '&';\n          }\n          query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n        }\n      }\n      if (query.length > 0) {\n        query = '?' + query;\n      }\n      xhr.open('POST', url + query, true);\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      for (var headerName in headers) {\n        if (headers.hasOwnProperty(headerName)) {\n          xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            var _data = void 0,\n                parsed = false;\n            try {\n              _data = JSON.parse(xhr.responseText);\n              parsed = true;\n            } catch (e) {\n              callback({\n                error: 'Invalid JSON. Data was: ' + xhr.responseText,\n                status: 200,\n                data: null\n              });\n            }\n            if (parsed) {\n              // prevents double execution.\n              callback({\n                data: _data,\n                status: 200\n              });\n            }\n          } else {\n            _this2._log('wrong status code in AJAX response', xhr.status);\n            callback({\n              status: xhr.status,\n              data: null\n            });\n          }\n        }\n      };\n      setTimeout(function () {\n        return xhr.send(JSON.stringify(data));\n      }, 20);\n      return xhr;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      (0, _utils.log)('info', arguments);\n    }\n  }, {\n    key: '_debug',\n    value: function _debug() {\n      if (this._config.debug === true) {\n        (0, _utils.log)('debug', arguments);\n      }\n    }\n  }, {\n    key: '_websocketSupported',\n    value: function _websocketSupported() {\n      return !(typeof WebSocket !== 'function' && (typeof WebSocket === 'undefined' ? 'undefined' : _typeof(WebSocket)) !== 'object');\n    }\n  }, {\n    key: '_setFormat',\n    value: function _setFormat(format) {\n      if (this._formatOverride(format)) {\n        return;\n      }\n      if (format === 'protobuf') {\n        throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n      }\n      this._binary = false;\n      this._methodType = _json.JsonMethodType;\n      this._pushType = _json.JsonPushType;\n      this._encoder = new _json.JsonEncoder();\n      this._decoder = new _json.JsonDecoder();\n    }\n  }, {\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      return false;\n    }\n  }, {\n    key: '_configure',\n    value: function _configure(configuration) {\n      if (!('Promise' in global)) {\n        throw new Error('Promise polyfill required');\n      }\n\n      Object.assign(this._config, configuration || {});\n      this._debug('centrifuge config', this._config);\n\n      if (!this._url) {\n        throw new Error('url required');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n        this._setFormat('protobuf');\n      } else {\n        this._setFormat('json');\n      }\n\n      if ((0, _utils.startsWith)(this._url, 'http')) {\n        this._debug('client will try to connect to SockJS endpoint');\n        if (this._config.sockjs !== null) {\n          this._debug('SockJS explicitly provided in options');\n          this._sockjs = this._config.sockjs;\n        } else {\n          if (typeof global.SockJS === 'undefined') {\n            throw new Error('SockJS not found, use ws:// in url or include SockJS');\n          }\n          this._debug('use globally defined SockJS');\n          this._sockjs = global.SockJS;\n        }\n      } else {\n        this._debug('client will connect to websocket endpoint');\n      }\n    }\n  }, {\n    key: '_setStatus',\n    value: function _setStatus(newStatus) {\n      if (this._status !== newStatus) {\n        this._debug('Status', this._status, '->', newStatus);\n        this._status = newStatus;\n      }\n    }\n  }, {\n    key: '_isDisconnected',\n    value: function _isDisconnected() {\n      return this._status === 'disconnected';\n    }\n  }, {\n    key: '_isConnecting',\n    value: function _isConnecting() {\n      return this._status === 'connecting';\n    }\n  }, {\n    key: '_isConnected',\n    value: function _isConnected() {\n      return this._status === 'connected';\n    }\n  }, {\n    key: '_nextMessageId',\n    value: function _nextMessageId() {\n      return ++this._messageId;\n    }\n  }, {\n    key: '_resetRetry',\n    value: function _resetRetry() {\n      this._debug('reset retries count to 0');\n      this._retries = 0;\n    }\n  }, {\n    key: '_getRetryInterval',\n    value: function _getRetryInterval() {\n      var interval = (0, _utils.backoff)(this._retries, this._config.minRetry, this._config.maxRetry);\n\n      this._retries += 1;\n      return interval;\n    }\n  }, {\n    key: '_clearConnectedState',\n    value: function _clearConnectedState(reconnect) {\n      this._clientID = null;\n      this._stopPing();\n\n      // fire errbacks of registered outgoing calls.\n      for (var id in this._callbacks) {\n        if (this._callbacks.hasOwnProperty(id)) {\n          var callbacks = this._callbacks[id];\n          clearTimeout(callbacks.timeout);\n          var errback = callbacks.errback;\n          if (!errback) {\n            continue;\n          }\n          errback(this._createErrorObject('disconnected'));\n        }\n      }\n      this._callbacks = {};\n\n      // fire unsubscribe events\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n\n          if (reconnect) {\n            if (sub._isSuccess()) {\n              sub._triggerUnsubscribe();\n              sub._recover = true;\n            }\n            sub._setSubscribing();\n          } else {\n            sub._setUnsubscribed();\n          }\n        }\n      }\n\n      // clear refresh timer\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      // clear sub refresh timers\n      for (var _channel in this._subRefreshTimeouts) {\n        if (this._subRefreshTimeouts.hasOwnProperty(_channel) && this._subRefreshTimeouts[_channel]) {\n          this._clearSubRefreshTimeout(_channel);\n        }\n      }\n      this._subRefreshTimeouts = {};\n\n      if (!this._reconnect) {\n        // completely clear subscriptions\n        this._subs = {};\n      }\n    }\n  }, {\n    key: '_transportSend',\n    value: function _transportSend(commands) {\n      if (!commands.length) {\n        return;\n      }\n      if (!this._transport) {\n        throw new Error('transport not connected');\n      }\n      this._transport.send(this._encoder.encodeCommands(commands));\n    }\n  }, {\n    key: '_setupTransport',\n    value: function _setupTransport() {\n      var _this3 = this;\n\n      this._isSockjs = false;\n\n      // detect transport to use - SockJS or Websocket\n      if (this._sockjs !== null) {\n        var sockjsOptions = {\n          transports: this._config.sockjsTransports\n        };\n\n        if (this._config.sockjsServer !== null) {\n          sockjsOptions.server = this._config.sockjsServer;\n        }\n        this._isSockjs = true;\n        this._transport = new this._sockjs(this._url, null, sockjsOptions);\n      } else {\n        if (!this._websocketSupported()) {\n          this._debug('No Websocket support and no SockJS configured, can not connect');\n          return;\n        }\n        this._transport = new WebSocket(this._url);\n        if (this._binary === true) {\n          this._transport.binaryType = 'arraybuffer';\n        }\n      }\n\n      this._transport.onopen = function () {\n        _this3._transportClosed = false;\n\n        if (_this3._isSockjs) {\n          _this3._transportName = 'sockjs-' + _this3._transport.transport;\n          _this3._transport.onheartbeat = function () {\n            return _this3._restartPing();\n          };\n        } else {\n          _this3._transportName = 'websocket';\n        }\n\n        // Can omit method here due to zero value.\n        var msg = {\n          // method: this._methodType.CONNECT\n        };\n\n        if (_this3._token || _this3._connectData) {\n          msg.params = {};\n        }\n\n        if (_this3._token) {\n          msg.params.token = _this3._token;\n        }\n\n        if (_this3._connectData) {\n          msg.params.data = _this3._connectData;\n        }\n\n        _this3._latencyStart = new Date();\n        _this3._call(msg).then(function (result) {\n          _this3._connectResponse(_this3._decoder.decodeCommandResult(_this3._methodType.CONNECT, result.result));\n          if (result.next) {\n            result.next();\n          }\n        }, function (err) {\n          if (err.code === 109) {\n            // token expired.\n            _this3._refreshRequired = true;\n          }\n          _this3._disconnect('connect error', true);\n        });\n      };\n\n      this._transport.onerror = function (error) {\n        _this3._debug('transport level error', error);\n      };\n\n      this._transport.onclose = function (closeEvent) {\n        _this3._transportClosed = true;\n        var reason = 'connection closed';\n        var needReconnect = true;\n\n        if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n          try {\n            var advice = JSON.parse(closeEvent.reason);\n            _this3._debug('reason is an advice object', advice);\n            reason = advice.reason;\n            needReconnect = advice.reconnect;\n          } catch (e) {\n            reason = closeEvent.reason;\n            _this3._debug('reason is a plain string', reason);\n          }\n        }\n\n        // onTransportClose callback should be executed every time transport was closed.\n        // This can be helpful to catch failed connection events (because our disconnect\n        // event only called once and every future attempts to connect do not fire disconnect\n        // event again).\n        if (_this3._config.onTransportClose !== null) {\n          _this3._config.onTransportClose({\n            event: closeEvent,\n            reason: reason,\n            reconnect: needReconnect\n          });\n        }\n\n        _this3._disconnect(reason, needReconnect);\n\n        if (_this3._reconnect === true) {\n          _this3._reconnecting = true;\n          var interval = _this3._getRetryInterval();\n\n          _this3._debug('reconnect after ' + interval + ' milliseconds');\n          setTimeout(function () {\n            if (_this3._reconnect === true) {\n              if (_this3._refreshRequired) {\n                _this3._refresh();\n              } else {\n                _this3._connect();\n              }\n            }\n          }, interval);\n        }\n      };\n\n      this._transport.onmessage = function (event) {\n        _this3._dataReceived(event.data);\n      };\n    }\n  }, {\n    key: 'rpc',\n    value: function rpc(data) {\n      var _this4 = this;\n\n      var msg = {\n        method: this._methodType.RPC,\n        params: {\n          data: data\n        }\n      };\n      return this._call(msg).then(function (result) {\n        if (result.next) {\n          result.next();\n        }\n        return _this4._decoder.decodeCommandResult(_this4._methodType.RPC, result.result);\n      });\n    }\n  }, {\n    key: 'send',\n    value: function send(data) {\n      var msg = {\n        method: this._methodType.SEND,\n        params: {\n          data: data\n        }\n      };\n\n      return this._callAsync(msg);\n    }\n  }, {\n    key: '_dataReceived',\n    value: function _dataReceived(data) {\n      var _this5 = this;\n\n      var replies = this._decoder.decodeReplies(data);\n      // we have to guarantee order of events in replies processing - i.e. start processing\n      // next reply only when we finished processing of current one. Without syncing things in\n      // this way we could get wrong publication events order as reply promises resolve\n      // on next loop tick so for loop continues before we finished emitting all reply events.\n      var p = Promise.resolve();\n\n      var _loop = function _loop(i) {\n        if (replies.hasOwnProperty(i)) {\n          p = p.then(function () {\n            return _this5._dispatchReply(replies[i]);\n          });\n        }\n      };\n\n      for (var i in replies) {\n        _loop(i);\n      }\n      this._restartPing();\n    }\n  }, {\n    key: '_callAsync',\n    value: function _callAsync(msg) {\n      this._addMessage(msg, true);\n    }\n  }, {\n    key: '_call',\n    value: function _call(msg) {\n      var _this6 = this;\n\n      return new global.Promise(function (resolve, reject) {\n        var id = _this6._addMessage(msg);\n        _this6._registerCall(id, resolve, reject);\n      });\n    }\n  }, {\n    key: '_connect',\n    value: function _connect() {\n      if (this.isConnected()) {\n        this._debug('connect called when already connected');\n        return;\n      }\n      if (this._status === 'connecting') {\n        return;\n      }\n\n      this._debug('start connecting');\n      this._setStatus('connecting');\n      this._clientID = null;\n      this._reconnect = true;\n      this._setupTransport();\n    }\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(reason, shouldReconnect) {\n\n      if (this._isDisconnected()) {\n        return;\n      }\n\n      this._debug('disconnected:', reason, shouldReconnect);\n\n      var reconnect = shouldReconnect || false;\n\n      if (reconnect === false) {\n        this._reconnect = false;\n      }\n\n      this._clearConnectedState(reconnect);\n\n      if (!this._isDisconnected()) {\n        this._setStatus('disconnected');\n        if (this._refreshTimeout) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._reconnecting === false) {\n          this.emit('disconnect', {\n            reason: reason,\n            reconnect: reconnect\n          });\n        }\n      }\n\n      if (!this._transportClosed) {\n        this._transport.close();\n      }\n    }\n  }, {\n    key: '_refreshFailed',\n    value: function _refreshFailed() {\n      this._numRefreshFailed = 0;\n      if (!this._isDisconnected()) {\n        this._disconnect('refresh failed', false);\n      }\n      if (this._config.onRefreshFailed !== null) {\n        this._config.onRefreshFailed();\n      }\n    }\n  }, {\n    key: '_refresh',\n    value: function _refresh() {\n      var _this7 = this;\n\n      // ask application for new connection token.\n      this._debug('refresh token');\n\n      if (this._config.refreshAttempts === 0) {\n        this._debug('refresh attempts set to 0, do not send refresh request at all');\n        this._refreshFailed();\n        return;\n      }\n\n      if (this._refreshTimeout !== null) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n\n      var cb = function cb(resp) {\n        if (resp.error || resp.status !== 200) {\n          // We don't perform any connection status related actions here as we are\n          // relying on server that must close connection eventually.\n          if (resp.error) {\n            _this7._debug('error refreshing connection token', resp.error);\n          } else {\n            _this7._debug('error refreshing connection token: wrong status code', resp.status);\n          }\n          _this7._numRefreshFailed++;\n          if (_this7._refreshTimeout !== null) {\n            clearTimeout(_this7._refreshTimeout);\n            _this7._refreshTimeout = null;\n          }\n          if (_this7._config.refreshAttempts !== null && _this7._numRefreshFailed >= _this7._config.refreshAttempts) {\n            _this7._refreshFailed();\n            return;\n          }\n          var jitter = Math.round(Math.random() * 1000 * Math.max(_this7._numRefreshFailed, 20));\n          var interval = _this7._config.refreshInterval + jitter;\n          _this7._refreshTimeout = setTimeout(function () {\n            return _this7._refresh();\n          }, interval);\n          return;\n        }\n        _this7._numRefreshFailed = 0;\n        _this7._token = resp.data.token;\n        if (!_this7._token) {\n          _this7._refreshFailed();\n          return;\n        }\n        if (_this7._isDisconnected() && _this7._reconnect) {\n          _this7._debug('token refreshed, connect from scratch');\n          _this7._connect();\n        } else {\n          _this7._debug('send refreshed token');\n          var msg = {\n            method: _this7._methodType.REFRESH,\n            params: {\n              token: _this7._token\n            }\n          };\n          _this7._call(msg).then(function (result) {\n            _this7._refreshResponse(_this7._decoder.decodeCommandResult(_this7._methodType.REFRESH, result.result));\n            if (result.next) {\n              result.next();\n            }\n          }, function (err) {\n            _this7._refreshError(err);\n          });\n        }\n      };\n\n      if (this._config.onRefresh !== null) {\n        var context = {};\n        this._config.onRefresh(context, cb);\n      } else {\n        this._ajax(this._config.refreshEndpoint, this._config.refreshParams, this._config.refreshHeaders, this._config.refreshData, cb);\n      }\n    }\n  }, {\n    key: '_refreshError',\n    value: function _refreshError(err) {\n      var _this8 = this;\n\n      this._debug('refresh error', err);\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      var interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n      this._refreshTimeout = setTimeout(function () {\n        return _this8._refresh();\n      }, interval);\n    }\n  }, {\n    key: '_refreshResponse',\n    value: function _refreshResponse(result) {\n      var _this9 = this;\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (result.expires) {\n        this._clientID = result.client;\n        this._refreshTimeout = setTimeout(function () {\n          return _this9._refresh();\n        }, result.ttl * 1000);\n      }\n    }\n  }, {\n    key: '_subRefresh',\n    value: function _subRefresh(channel) {\n      var _this10 = this;\n\n      this._debug('refresh subscription token for channel', channel);\n\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        this._clearSubRefreshTimeout(channel);\n      } else {\n        return;\n      }\n\n      var cb = function cb(resp) {\n        if (resp.error || resp.status !== 200) {\n          return;\n        }\n\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var i in data.channels) {\n            var channelData = resp.data.channels[i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        var token = channelsData[channel];\n        if (!token) {\n          return;\n        }\n        var msg = {\n          method: _this10._methodType.SUB_REFRESH,\n          params: {\n            channel: channel,\n            token: token\n          }\n        };\n\n        var sub = _this10._getSub(channel);\n        if (sub === null) {\n          return;\n        }\n\n        _this10._call(msg).then(function (result) {\n          _this10._subRefreshResponse(channel, _this10._decoder.decodeCommandResult(_this10._methodType.SUB_REFRESH, result.result));\n          if (result.next) {\n            result.next();\n          }\n        }, function (err) {\n          _this10._subRefreshError(channel, err);\n        });\n      };\n\n      var data = {\n        client: this._clientID,\n        channels: [channel]\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      }\n    }\n  }, {\n    key: '_clearSubRefreshTimeout',\n    value: function _clearSubRefreshTimeout(channel) {\n      if (this._subRefreshTimeouts[channel] !== undefined) {\n        clearTimeout(this._subRefreshTimeouts[channel]);\n        delete this._subRefreshTimeouts[channel];\n      }\n    }\n  }, {\n    key: '_subRefreshError',\n    value: function _subRefreshError(channel, err) {\n      var _this11 = this;\n\n      this._debug('subscription refresh error', channel, err);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      var jitter = Math.round(Math.random() * 1000);\n      var subRefreshTimeout = setTimeout(function () {\n        return _this11._subRefresh(channel);\n      }, this._config.subRefreshInterval + jitter);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      return;\n    }\n  }, {\n    key: '_subRefreshResponse',\n    value: function _subRefreshResponse(channel, result) {\n      var _this12 = this;\n\n      this._debug('subscription refresh success', channel);\n      this._clearSubRefreshTimeout(channel);\n      var sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this12._subRefresh(channel);\n        }, result.ttl * 1000);\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n      return;\n    }\n  }, {\n    key: '_subscribe',\n    value: function _subscribe(sub, isResubscribe) {\n      var _this13 = this;\n\n      this._debug('subscribing on', sub.channel);\n      var channel = sub.channel;\n\n      if (!(channel in this._subs)) {\n        this._subs[channel] = sub;\n      }\n\n      if (!this.isConnected()) {\n        // subscribe will be called later\n        sub._setNew();\n        return;\n      }\n\n      sub._setSubscribing(isResubscribe);\n\n      var msg = {\n        method: this._methodType.SUBSCRIBE,\n        params: {\n          channel: channel\n        }\n      };\n\n      // If channel name does not start with privateChannelPrefix - then we\n      // can just send subscription message to Centrifuge. If channel name\n      // starts with privateChannelPrefix - then this is a private channel\n      // and we should ask web application backend for permission first.\n      if ((0, _utils.startsWith)(channel, this._config.privateChannelPrefix)) {\n        // private channel.\n        if (this._isSubscribeBatching) {\n          this._privateChannels[channel] = true;\n        } else {\n          this.startSubscribeBatching();\n          this._subscribe(sub);\n          this.stopSubscribeBatching();\n        }\n      } else {\n        var recover = sub._needRecover();\n\n        if (recover === true) {\n          msg.params.recover = true;\n          var seq = this._getLastSeq(channel);\n          if (seq) {\n            msg.params.seq = seq;\n          }\n          var gen = this._getLastGen(channel);\n          if (gen) {\n            msg.params.gen = gen;\n          }\n          var epoch = this._getLastEpoch(channel);\n          if (epoch) {\n            msg.params.epoch = epoch;\n          }\n        }\n\n        this._call(msg).then(function (result) {\n          _this13._subscribeResponse(channel, _this13._decoder.decodeCommandResult(_this13._methodType.SUBSCRIBE, result.result));\n          if (result.next) {\n            result.next();\n          }\n        }, function (err) {\n          _this13._subscribeError(channel, err);\n        });\n      }\n    }\n  }, {\n    key: '_unsubscribe',\n    value: function _unsubscribe(sub) {\n      if (this.isConnected()) {\n        // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n        this._addMessage({\n          method: this._methodType.UNSUBSCRIBE,\n          params: {\n            channel: sub.channel\n          }\n        });\n      }\n    }\n  }, {\n    key: 'getSub',\n    value: function getSub(channel) {\n      return this._getSub(channel);\n    }\n  }, {\n    key: '_getSub',\n    value: function _getSub(channel) {\n      var sub = this._subs[channel];\n      if (!sub) {\n        return null;\n      }\n      return sub;\n    }\n  }, {\n    key: '_connectResponse',\n    value: function _connectResponse(result) {\n      var _this14 = this;\n\n      var wasReconnecting = this._reconnecting;\n      this._reconnecting = false;\n      this._resetRetry();\n\n      if (this.isConnected()) {\n        return;\n      }\n\n      if (this._latencyStart !== null) {\n        this._latency = new Date().getTime() - this._latencyStart.getTime();\n        this._latencyStart = null;\n      }\n\n      this._clientID = result.client;\n      this._setStatus('connected');\n\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n      }\n\n      if (result.expires) {\n        this._refreshTimeout = setTimeout(function () {\n          return _this14._refresh();\n        }, result.ttl * 1000);\n      }\n\n      this.startBatching();\n      this.startSubscribeBatching();\n      for (var channel in this._subs) {\n        if (this._subs.hasOwnProperty(channel)) {\n          var sub = this._subs[channel];\n          if (sub._shouldResubscribe()) {\n            this._subscribe(sub, wasReconnecting);\n          }\n        }\n      }\n      this.stopSubscribeBatching();\n      this.stopBatching();\n\n      this._startPing();\n\n      var ctx = {\n        client: result.client,\n        transport: this._transportName,\n        latency: this._latency\n      };\n      if (result.data) {\n        ctx.data = result.data;\n      }\n\n      this.emit('connect', ctx);\n    }\n  }, {\n    key: '_stopPing',\n    value: function _stopPing() {\n      if (this._pongTimeout !== null) {\n        clearTimeout(this._pongTimeout);\n        this._pongTimeout = null;\n      }\n      if (this._pingTimeout !== null) {\n        clearTimeout(this._pingTimeout);\n        this._pingTimeout = null;\n      }\n    }\n  }, {\n    key: '_startPing',\n    value: function _startPing() {\n      var _this15 = this;\n\n      if (this._config.ping !== true || this._config.pingInterval <= 0) {\n        return;\n      }\n      if (!this.isConnected()) {\n        return;\n      }\n\n      this._pingTimeout = setTimeout(function () {\n        if (!_this15.isConnected()) {\n          _this15._stopPing();\n          return;\n        }\n        _this15.ping();\n        _this15._pongTimeout = setTimeout(function () {\n          _this15._disconnect('no ping', true);\n        }, _this15._config.pongWaitTimeout);\n      }, this._config.pingInterval);\n    }\n  }, {\n    key: '_restartPing',\n    value: function _restartPing() {\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_subscribeError',\n    value: function _subscribeError(channel, error) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n      if (error.code === 0 && error.message === _errorTimeout) {\n        // client side timeout.\n        this._disconnect('timeout', true);\n        return;\n      }\n      sub._setSubscribeError(error);\n    }\n  }, {\n    key: '_subscribeResponse',\n    value: function _subscribeResponse(channel, result) {\n      var _this16 = this;\n\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (!sub._isSubscribing()) {\n        return;\n      }\n\n      var recovered = false;\n      if ('recovered' in result) {\n        recovered = result.recovered;\n      }\n      sub._setSubscribeSuccess(recovered);\n\n      var pubs = result.publications;\n\n      if (pubs && pubs.length > 0) {\n        // handle missed pubs.\n        pubs = pubs.reverse();\n        for (var i in pubs) {\n          if (pubs.hasOwnProperty(i)) {\n            this._handlePublication(channel, pubs[i]);\n          }\n        }\n      } else {\n        if (result.recoverable) {\n          this._lastSeq[channel] = result.seq || 0;\n          this._lastGen[channel] = result.gen || 0;\n        }\n      }\n\n      this._lastEpoch[channel] = result.epoch || '';\n\n      if (result.recoverable) {\n        sub._recoverable = true;\n      }\n\n      if (result.expires === true) {\n        var subRefreshTimeout = setTimeout(function () {\n          return _this16._subRefresh(channel);\n        }, result.ttl * 1000);\n        this._subRefreshTimeouts[channel] = subRefreshTimeout;\n      }\n    }\n  }, {\n    key: '_handleReply',\n    value: function _handleReply(reply, next) {\n      var id = reply.id;\n      var result = reply.result;\n\n      if (!(id in this._callbacks)) {\n        return;\n      }\n      var callbacks = this._callbacks[id];\n      clearTimeout(this._callbacks[id].timeout);\n      delete this._callbacks[id];\n\n      if (!(0, _utils.errorExists)(reply)) {\n        var callback = callbacks.callback;\n        if (!callback) {\n          return;\n        }\n        callback({ result: result, next: next });\n      } else {\n        var errback = callbacks.errback;\n        if (!errback) {\n          return;\n        }\n        errback(reply.error);\n      }\n    }\n  }, {\n    key: '_handleJoin',\n    value: function _handleJoin(channel, join) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('join', join);\n    }\n  }, {\n    key: '_handleLeave',\n    value: function _handleLeave(channel, leave) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.emit('leave', leave);\n    }\n  }, {\n    key: '_handleUnsub',\n    value: function _handleUnsub(channel, unsub) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      sub.unsubscribe();\n      if (unsub.resubscribe === true) {\n        sub.subscribe();\n      }\n    }\n  }, {\n    key: '_handlePublication',\n    value: function _handlePublication(channel, pub) {\n      var sub = this._getSub(channel);\n      if (!sub) {\n        return;\n      }\n      if (pub.seq !== undefined) {\n        this._lastSeq[channel] = pub.seq;\n      }\n      if (pub.gen !== undefined) {\n        this._lastGen[channel] = pub.gen;\n      }\n      sub.emit('publish', pub);\n    }\n  }, {\n    key: '_handleMessage',\n    value: function _handleMessage(message) {\n      this.emit('message', message.data);\n    }\n  }, {\n    key: '_handlePush',\n    value: function _handlePush(data, next) {\n      var push = this._decoder.decodePush(data);\n      var type = 0;\n      if ('type' in push) {\n        type = push['type'];\n      }\n      var channel = push.channel;\n\n      if (type === this._pushType.PUBLICATION) {\n        var pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n        this._handlePublication(channel, pub);\n      } else if (type === this._pushType.MESSAGE) {\n        var message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n        this._handleMessage(message);\n      } else if (type === this._pushType.JOIN) {\n        var join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n        this._handleJoin(channel, join);\n      } else if (type === this._pushType.LEAVE) {\n        var leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n        this._handleLeave(channel, leave);\n      } else if (type === this._pushType.UNSUB) {\n        var unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n        this._handleUnsub(channel, unsub);\n      }\n      next();\n    }\n  }, {\n    key: '_dispatchReply',\n    value: function _dispatchReply(reply) {\n      var next;\n      var p = new Promise(function (resolve) {\n        next = resolve;\n      });\n\n      if (reply === undefined || reply === null) {\n        this._debug('dispatch: got undefined or null reply');\n        next();\n        return p;\n      }\n\n      var id = reply.id;\n\n      if (id && id > 0) {\n        this._handleReply(reply, next);\n      } else {\n        this._handlePush(reply.result, next);\n      }\n\n      return p;\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      var messages = this._messages.slice(0);\n      this._messages = [];\n      this._transportSend(messages);\n    }\n  }, {\n    key: '_ping',\n    value: function _ping() {\n      var _this17 = this;\n\n      var msg = {\n        method: this._methodType.PING\n      };\n      this._call(msg).then(function (result) {\n        _this17._pingResponse(_this17._decoder.decodeCommandResult(_this17._methodType.PING, result.result));\n        result.next();\n      }, function (err) {\n        _this17._debug('ping error', err);\n      });\n    }\n  }, {\n    key: '_pingResponse',\n    value: function _pingResponse(result) {\n      if (!this.isConnected()) {\n        return;\n      }\n      this._stopPing();\n      this._startPing();\n    }\n  }, {\n    key: '_getLastSeq',\n    value: function _getLastSeq(channel) {\n      var lastSeq = this._lastSeq[channel];\n      if (lastSeq) {\n        return lastSeq;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastGen',\n    value: function _getLastGen(channel) {\n      var lastGen = this._lastGen[channel];\n      if (lastGen) {\n        return lastGen;\n      }\n      return 0;\n    }\n  }, {\n    key: '_getLastEpoch',\n    value: function _getLastEpoch(channel) {\n      var lastEpoch = this._lastEpoch[channel];\n      if (lastEpoch) {\n        return lastEpoch;\n      }\n      return '';\n    }\n  }, {\n    key: '_createErrorObject',\n    value: function _createErrorObject(message, code) {\n      var errObject = {\n        message: message,\n        code: code || 0\n      };\n\n      return errObject;\n    }\n  }, {\n    key: '_registerCall',\n    value: function _registerCall(id, callback, errback) {\n      var _this18 = this;\n\n      this._callbacks[id] = {\n        callback: callback,\n        errback: errback,\n        timeout: null\n      };\n      this._callbacks[id].timeout = setTimeout(function () {\n        delete _this18._callbacks[id];\n        if ((0, _utils.isFunction)(errback)) {\n          errback(_this18._createErrorObject(_errorTimeout));\n        }\n      }, this._config.timeout);\n    }\n  }, {\n    key: '_addMessage',\n    value: function _addMessage(message, async) {\n      var id = void 0;\n      if (!async) {\n        id = this._nextMessageId();\n        message.id = id;\n      }\n      if (this._isBatching === true) {\n        this._messages.push(message);\n      } else {\n        this._transportSend([message]);\n      }\n      if (!async) {\n        return id;\n      }\n      return 0;\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return this._isConnected();\n    }\n  }, {\n    key: 'connect',\n    value: function connect() {\n      this._connect();\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      this._disconnect('client', false);\n    }\n  }, {\n    key: 'ping',\n    value: function ping() {\n      return this._ping();\n    }\n  }, {\n    key: 'startBatching',\n    value: function startBatching() {\n      // start collecting messages without sending them to Centrifuge until flush\n      // method called\n      this._isBatching = true;\n    }\n  }, {\n    key: 'stopBatching',\n    value: function stopBatching() {\n      this._isBatching = false;\n      this._flush();\n    }\n  }, {\n    key: 'startSubscribeBatching',\n    value: function startSubscribeBatching() {\n      // start collecting private channels to create bulk authentication\n      // request to subscribeEndpoint when stopSubscribeBatching will be called\n      this._isSubscribeBatching = true;\n    }\n  }, {\n    key: 'stopSubscribeBatching',\n    value: function stopSubscribeBatching() {\n      var _this19 = this;\n\n      // create request to subscribeEndpoint with collected private channels\n      // to ask if this client can subscribe on each channel\n      this._isSubscribeBatching = false;\n      var authChannels = this._privateChannels;\n      this._privateChannels = {};\n\n      var channels = [];\n\n      for (var channel in authChannels) {\n        if (authChannels.hasOwnProperty(channel)) {\n          var sub = this._getSub(channel);\n          if (!sub) {\n            continue;\n          }\n          channels.push(channel);\n        }\n      }\n\n      if (channels.length === 0) {\n        this._debug('no private channels found, no need to make request');\n        return;\n      }\n\n      var data = {\n        client: this._clientID,\n        channels: channels\n      };\n\n      var cb = function cb(resp) {\n        if (resp.error || resp.status !== 200) {\n          _this19._debug('authorization request failed');\n          for (var i in channels) {\n            if (channels.hasOwnProperty(i)) {\n              var _channel2 = channels[i];\n              _this19._subscribeError(_channel2, _this19._createErrorObject('authorization request failed'));\n            }\n          }\n          return;\n        }\n\n        var channelsData = {};\n        if (resp.data.channels) {\n          for (var _i in resp.data.channels) {\n            var channelData = resp.data.channels[_i];\n            if (!channelData.channel) {\n              continue;\n            }\n            channelsData[channelData.channel] = channelData.token;\n          }\n        }\n\n        // try to send all subscriptions in one request.\n        var batch = false;\n\n        if (!_this19._isBatching) {\n          _this19.startBatching();\n          batch = true;\n        }\n\n        for (var _i2 in channels) {\n          if (channels.hasOwnProperty(_i2)) {\n            var _ret2 = function () {\n              var channel = channels[_i2];\n              var token = channelsData[channel];\n\n              if (!token) {\n                // subscription:error\n                _this19._subscribeError(channel, _this19._createErrorObject('permission denied', 103));\n                return 'continue';\n              } else {\n                var msg = {\n                  method: _this19._methodType.SUBSCRIBE,\n                  params: {\n                    channel: channel,\n                    token: token\n                  }\n                };\n\n                var _sub = _this19._getSub(channel);\n                if (_sub === null) {\n                  return 'continue';\n                }\n\n                var recover = _sub._needRecover();\n\n                if (recover === true) {\n                  msg.params.recover = true;\n                  var seq = _this19._getLastSeq(channel);\n                  if (seq) {\n                    msg.params.seq = seq;\n                  }\n                  var gen = _this19._getLastGen(channel);\n                  if (gen) {\n                    msg.params.gen = gen;\n                  }\n                  var epoch = _this19._getLastEpoch(channel);\n                  if (epoch) {\n                    msg.params.epoch = epoch;\n                  }\n                }\n                _this19._call(msg).then(function (result) {\n                  _this19._subscribeResponse(channel, _this19._decoder.decodeCommandResult(_this19._methodType.SUBSCRIBE, result.result));\n                  if (result.next) {\n                    result.next();\n                  }\n                }, function (err) {\n                  _this19._subscribeError(channel, err);\n                });\n              }\n            }();\n\n            if (_ret2 === 'continue') continue;\n          }\n        }\n\n        if (batch) {\n          _this19.stopBatching();\n        }\n      };\n\n      if (this._config.onPrivateSubscribe !== null) {\n        this._config.onPrivateSubscribe({\n          data: data\n        }, cb);\n      } else {\n        this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe(channel, events) {\n      var currentSub = this._getSub(channel);\n      if (currentSub !== null) {\n        currentSub._setEvents(events);\n        if (currentSub._isUnsubscribed()) {\n          currentSub.subscribe();\n        }\n        return currentSub;\n      }\n      var sub = new _subscription2.default(this, channel, events);\n      this._subs[channel] = sub;\n      sub.subscribe();\n      return sub;\n    }\n  }]);\n\n  return Centrifuge;\n}(_events2.default);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = __webpack_require__(6);\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _utils = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _STATE_NEW = 0;\nvar _STATE_SUBSCRIBING = 1;\nvar _STATE_SUCCESS = 2;\nvar _STATE_ERROR = 3;\nvar _STATE_UNSUBSCRIBED = 4;\n\nvar Subscription = function (_EventEmitter) {\n  _inherits(Subscription, _EventEmitter);\n\n  function Subscription(centrifuge, channel, events) {\n    _classCallCheck(this, Subscription);\n\n    var _this = _possibleConstructorReturn(this, (Subscription.__proto__ || Object.getPrototypeOf(Subscription)).call(this));\n\n    _this.channel = channel;\n    _this._centrifuge = centrifuge;\n    _this._status = _STATE_NEW;\n    _this._error = null;\n    _this._isResubscribe = false;\n    _this._ready = false;\n    _this._subscriptionPromise = null;\n    _this._noResubscribe = false;\n    _this._recoverable = false;\n    _this._recover = false;\n    _this._setEvents(events);\n    _this._initializePromise();\n    _this._promises = {};\n    return _this;\n  }\n\n  _createClass(Subscription, [{\n    key: '_initializePromise',\n    value: function _initializePromise() {\n      var _this2 = this;\n\n      // this helps us to wait until subscription will successfully\n      // subscribe and call actions such as presence, history etc in\n      // synchronous way.\n      this._ready = false;\n\n      this._subscriptionPromise = new global.Promise(function (resolve, reject) {\n        _this2._resolve = function (value) {\n          _this2._ready = true;\n          resolve(value);\n        };\n        _this2._reject = function (err) {\n          _this2._ready = true;\n          reject(err);\n        };\n      });\n    }\n  }, {\n    key: '_needRecover',\n    value: function _needRecover() {\n      return this._recoverable === true && this._recover === true;\n    }\n  }, {\n    key: '_setEvents',\n    value: function _setEvents(events) {\n      if (!events) {\n        return;\n      }\n      if ((0, _utils.isFunction)(events)) {\n        // events is just a function to handle publication received from channel.\n        this.on('publish', events);\n      } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n        var knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n        for (var i = 0, l = knownEvents.length; i < l; i++) {\n          var ev = knownEvents[i];\n          if (ev in events) {\n            this.on(ev, events[ev]);\n          }\n        }\n      }\n    }\n  }, {\n    key: '_isNew',\n    value: function _isNew() {\n      return this._status === _STATE_NEW;\n    }\n  }, {\n    key: '_isUnsubscribed',\n    value: function _isUnsubscribed() {\n      return this._status === _STATE_UNSUBSCRIBED;\n    }\n  }, {\n    key: '_isSubscribing',\n    value: function _isSubscribing() {\n      return this._status === _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_isReady',\n    value: function _isReady() {\n      return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_isSuccess',\n    value: function _isSuccess() {\n      return this._status === _STATE_SUCCESS;\n    }\n  }, {\n    key: '_isError',\n    value: function _isError() {\n      return this._status === _STATE_ERROR;\n    }\n  }, {\n    key: '_setNew',\n    value: function _setNew() {\n      this._status = _STATE_NEW;\n    }\n  }, {\n    key: '_setSubscribing',\n    value: function _setSubscribing(isResubscribe) {\n      this._isResubscribe = isResubscribe || false;\n      if (this._ready === true) {\n        // new promise for this subscription\n        this._initializePromise();\n      }\n      this._status = _STATE_SUBSCRIBING;\n    }\n  }, {\n    key: '_setSubscribeSuccess',\n    value: function _setSubscribeSuccess(recovered) {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._status = _STATE_SUCCESS;\n      var successContext = this._getSubscribeSuccessContext(recovered);\n\n      this._recover = false;\n      this.emit('subscribe', successContext);\n      this._resolve(successContext);\n      for (var to in this._promises) {\n        clearTimeout(to);\n        this._promises[to].resolve();\n        delete this._promises[to];\n      }\n    }\n  }, {\n    key: '_setSubscribeError',\n    value: function _setSubscribeError(err) {\n      if (this._status === _STATE_ERROR) {\n        return;\n      }\n      this._status = _STATE_ERROR;\n      this._error = err;\n      var errContext = this._getSubscribeErrorContext();\n      this.emit('error', errContext);\n      this._reject(errContext);\n      for (var to in this._promises) {\n        clearTimeout(to);\n        this._promises[to].reject(err);\n        delete this._promises[to];\n      }\n    }\n  }, {\n    key: '_triggerUnsubscribe',\n    value: function _triggerUnsubscribe() {\n      this.emit('unsubscribe', {\n        channel: this.channel\n      });\n    }\n  }, {\n    key: '_setUnsubscribed',\n    value: function _setUnsubscribed(noResubscribe) {\n      this._centrifuge._clearSubRefreshTimeout(this.channel);\n      if (this._status === _STATE_UNSUBSCRIBED) {\n        return;\n      }\n      var needTrigger = this._status === _STATE_SUCCESS;\n      this._status = _STATE_UNSUBSCRIBED;\n      if (noResubscribe === true) {\n        this._recover = false;\n        this._noResubscribe = true;\n        delete this._centrifuge._lastSeq[this.channel];\n        delete this._centrifuge._lastGen[this.channel];\n        delete this._centrifuge._lastEpoch[this.channel];\n      }\n      if (needTrigger) {\n        this._triggerUnsubscribe();\n      }\n    }\n  }, {\n    key: '_shouldResubscribe',\n    value: function _shouldResubscribe() {\n      return !this._noResubscribe;\n    }\n  }, {\n    key: '_getSubscribeSuccessContext',\n    value: function _getSubscribeSuccessContext(recovered) {\n      return {\n        channel: this.channel,\n        isResubscribe: this._isResubscribe,\n        recovered: recovered\n      };\n    }\n  }, {\n    key: '_getSubscribeErrorContext',\n    value: function _getSubscribeErrorContext() {\n      var subscribeErrorContext = this._error;\n      subscribeErrorContext.channel = this.channel;\n      subscribeErrorContext.isResubscribe = this._isResubscribe;\n      return subscribeErrorContext;\n    }\n  }, {\n    key: 'ready',\n    value: function ready(callback, errback) {\n      if (this._ready) {\n        if (this._isSuccess()) {\n          callback(this._getSubscribeSuccessContext());\n        } else {\n          errback(this._getSubscribeErrorContext());\n        }\n      }\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      if (this._status === _STATE_SUCCESS) {\n        return;\n      }\n      this._noResubscribe = false;\n      this._centrifuge._subscribe(this);\n    }\n  }, {\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      this._setUnsubscribed(true);\n      this._centrifuge._unsubscribe(this);\n    }\n  }, {\n    key: '_methodCall',\n    value: function _methodCall(message, type) {\n      var _this3 = this;\n\n      var methodCallPromise = new Promise(function (resolve, reject) {\n        var subPromise = void 0;\n        if (_this3._isSuccess()) {\n          subPromise = Promise.resolve();\n        } else if (_this3._isError()) {\n          subPromise = Promise.reject(_this3._error);\n        } else {\n          subPromise = new Promise(function (res, rej) {\n            var timeout = setTimeout(function () {\n              rej({ 'code': 0, 'message': 'timeout' });\n            }, _this3._centrifuge._config.timeout);\n            _this3._promises[timeout] = {\n              resolve: res,\n              reject: rej\n            };\n          });\n        }\n        subPromise.then(function () {\n          return _this3._centrifuge._call(message).then(function (result) {\n            resolve(_this3._centrifuge._decoder.decodeCommandResult(type, result.result));\n            if (result.next) {\n              result.next();\n            }\n          }, function (error) {\n            reject(error);\n          });\n        }, function (error) {\n          reject(error);\n        });\n      });\n      return methodCallPromise;\n    }\n  }, {\n    key: 'publish',\n    value: function publish(data) {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PUBLISH,\n        params: {\n          channel: this.channel,\n          data: data\n        }\n      }, this._centrifuge._methodType.PUBLISH);\n    }\n  }, {\n    key: 'presence',\n    value: function presence() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE);\n    }\n  }, {\n    key: 'presenceStats',\n    value: function presenceStats() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.PRESENCE_STATS,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.PRESENCE_STATS);\n    }\n  }, {\n    key: 'history',\n    value: function history() {\n      return this._methodCall({\n        method: this._centrifuge._methodType.HISTORY,\n        params: {\n          channel: this.channel\n        }\n      }, this._centrifuge._methodType.HISTORY);\n    }\n  }]);\n\n  return Subscription;\n}(_events2.default);\n\nexports.default = Subscription;\nmodule.exports = exports['default'];\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar JsonMethodType = exports.JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nvar JsonPushType = exports.JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nvar JsonEncoder = exports.JsonEncoder = function () {\n  function JsonEncoder() {\n    _classCallCheck(this, JsonEncoder);\n  }\n\n  _createClass(JsonEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var encodedCommands = [];\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          encodedCommands.push(JSON.stringify(commands[i]));\n        }\n      }\n      return encodedCommands.join('\\n');\n    }\n  }]);\n\n  return JsonEncoder;\n}();\n\nvar JsonDecoder = exports.JsonDecoder = function () {\n  function JsonDecoder() {\n    _classCallCheck(this, JsonDecoder);\n  }\n\n  _createClass(JsonDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var encodedReplies = data.split('\\n');\n      for (var i in encodedReplies) {\n        if (encodedReplies.hasOwnProperty(i)) {\n          if (!encodedReplies[i]) {\n            continue;\n          }\n          var reply = JSON.parse(encodedReplies[i]);\n          replies.push(reply);\n        }\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      return data;\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return data;\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      return data;\n    }\n  }]);\n\n  return JsonDecoder;\n}();\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Writer;\r\n\r\nvar util      = __webpack_require__(2);\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Reader;\r\n\r\nvar util      = __webpack_require__(2);\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = __webpack_require__(5),\r\n    util  = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Message;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = __webpack_require__(45);\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = __webpack_require__(1),\r\n    types    = __webpack_require__(9),\r\n    util     = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = __webpack_require__(1),\r\n    OneOf     = __webpack_require__(15),\r\n    Field     = __webpack_require__(5),\r\n    MapField  = __webpack_require__(23),\r\n    Service   = __webpack_require__(24),\r\n    Message   = __webpack_require__(16),\r\n    Reader    = __webpack_require__(14),\r\n    Writer    = __webpack_require__(13),\r\n    util      = __webpack_require__(0),\r\n    encoder   = __webpack_require__(21),\r\n    decoder   = __webpack_require__(26),\r\n    verifier  = __webpack_require__(27),\r\n    converter = __webpack_require__(28),\r\n    wrappers  = __webpack_require__(29);\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = __webpack_require__(5);\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = __webpack_require__(9),\r\n    util    = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = __webpack_require__(25),\r\n    util   = __webpack_require__(0),\r\n    rpc    = __webpack_require__(19);\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = __webpack_require__(4);\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = __webpack_require__(0);\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = __webpack_require__(1),\r\n    types   = __webpack_require__(9),\r\n    util    = __webpack_require__(0);\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = __webpack_require__(1),\r\n    util      = __webpack_require__(0);\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = __webpack_require__(1),\r\n    util = __webpack_require__(0);\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) gen\r\n        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");\r\n            else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = __webpack_require__(16);\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = __webpack_require__(8);\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = __webpack_require__(5),\r\n    Enum    = __webpack_require__(1),\r\n    OneOf   = __webpack_require__(15),\r\n    util    = __webpack_require__(0);\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type = Type_;\r\n    parse = parse_;\r\n    common = common_;\r\n};\r\n\n\n/***/ }),\n/* 31 */,\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _protobuf = __webpack_require__(33);\n\nexports.default = _protobuf.CentrifugeProtobuf;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CentrifugeProtobuf = exports.ProtobufDecoder = exports.ProtobufEncoder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _centrifuge = __webpack_require__(10);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar protobuf = __webpack_require__(34);\nvar proto = protobuf.Root.fromJSON(__webpack_require__(49));\n\nvar methodValues = proto.lookupEnum('MethodType').values;\n\nvar protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nvar methodSchema = {\n  CONNECT: [proto.lookupType('proto.ConnectRequest'), proto.lookupType('proto.ConnectResult')],\n  REFRESH: [proto.lookupType('proto.RefreshRequest'), proto.lookupType('proto.RefreshResult')],\n  SUBSCRIBE: [proto.lookupType('proto.SubscribeRequest'), proto.lookupType('proto.SubscribeResult')],\n  SUB_REFRESH: [proto.lookupType('proto.SubRefreshRequest'), proto.lookupType('proto.SubRefreshResult')],\n  UNSUBSCRIBE: [proto.lookupType('proto.UnsubscribeRequest'), proto.lookupType('proto.UnsubscribeResult')],\n  PUBLISH: [proto.lookupType('proto.PublishRequest'), proto.lookupType('proto.PublishResult')],\n  PRESENCE: [proto.lookupType('proto.PresenceRequest'), proto.lookupType('proto.PresenceResult')],\n  PRESENCE_STATS: [proto.lookupType('proto.PresenceStatsRequest'), proto.lookupType('proto.PresenceStatsResult')],\n  HISTORY: [proto.lookupType('proto.HistoryRequest'), proto.lookupType('proto.HistoryResult')],\n  PING: [proto.lookupType('proto.PingRequest'), proto.lookupType('proto.PingResult')],\n  RPC: [proto.lookupType('proto.RPCRequest'), proto.lookupType('proto.RPCResult')],\n  SEND: [proto.lookupType('proto.SendRequest'), null]\n};\n\nvar protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nvar PushSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub'),\n  MESSAGE: proto.lookupType('proto.Message')\n};\n\nvar Push = proto.lookupType('proto.Push');\nvar Command = proto.lookupType('proto.Command');\nvar Reply = proto.lookupType('proto.Reply');\n\nvar ProtobufEncoder = exports.ProtobufEncoder = function () {\n  function ProtobufEncoder() {\n    _classCallCheck(this, ProtobufEncoder);\n  }\n\n  _createClass(ProtobufEncoder, [{\n    key: 'encodeCommands',\n    value: function encodeCommands(commands) {\n      var writer = protobuf.Writer.create();\n      for (var i in commands) {\n        if (commands.hasOwnProperty(i)) {\n          var command = Object.assign({}, commands[i]);\n          if (command.params) {\n            var type = void 0;\n            if (!command.method) {\n              command.method = protobufMethodType.CONNECT;\n            };\n            switch (command.method) {\n              case protobufMethodType.CONNECT:\n                type = methodSchema.CONNECT[0];\n                break;\n              case protobufMethodType.REFRESH:\n                type = methodSchema.REFRESH;\n                break;\n              case protobufMethodType.SUBSCRIBE:\n                type = methodSchema.SUBSCRIBE[0];\n                break;\n              case protobufMethodType.SUB_REFRESH:\n                type = methodSchema.SUB_REFRESH[0];\n                break;\n              case protobufMethodType.UNSUBSCRIBE:\n                type = methodSchema.UNSUBSCRIBE[0];\n                break;\n              case protobufMethodType.PUBLISH:\n                type = methodSchema.PUBLISH[0];\n                break;\n              case protobufMethodType.PRESENCE:\n                type = methodSchema.PRESENCE[0];\n                break;\n              case protobufMethodType.PRESENCE_STATS:\n                type = methodSchema.PRESENCE_STATS[0];\n                break;\n              case protobufMethodType.HISTORY:\n                type = methodSchema.HISTORY[0];\n                break;\n              case protobufMethodType.PING:\n                type = methodSchema.PING[0];\n                break;\n              case protobufMethodType.RPC:\n                type = methodSchema.RPC[0];\n                break;\n              case protobufMethodType.SEND:\n                type = methodSchema.SEND[0];\n                break;\n            }\n            command.params = type.encode(command.params).finish();\n          }\n          Command.encodeDelimited(command, writer);\n        }\n      }\n      return writer.finish();\n    }\n  }]);\n\n  return ProtobufEncoder;\n}();\n\nvar ProtobufDecoder = exports.ProtobufDecoder = function () {\n  function ProtobufDecoder() {\n    _classCallCheck(this, ProtobufDecoder);\n  }\n\n  _createClass(ProtobufDecoder, [{\n    key: 'decodeReplies',\n    value: function decodeReplies(data) {\n      var replies = [];\n      var reader = protobuf.Reader.create(new Uint8Array(data));\n      while (reader.pos < reader.len) {\n        var reply = Reply.decodeDelimited(reader);\n        replies.push(reply);\n      }\n      return replies;\n    }\n  }, {\n    key: 'decodeCommandResult',\n    value: function decodeCommandResult(methodType, data) {\n      var type;\n      switch (methodType) {\n        case protobufMethodType.CONNECT:\n          type = methodSchema.CONNECT[1];\n          break;\n        case protobufMethodType.REFRESH:\n          type = methodSchema.REFRESH[1];\n          break;\n        case protobufMethodType.SUBSCRIBE:\n          type = methodSchema.SUBSCRIBE[1];\n          break;\n        case protobufMethodType.SUB_REFRESH:\n          type = methodSchema.SUB_REFRESH[1];\n          break;\n        case protobufMethodType.UNSUBSCRIBE:\n          type = methodSchema.UNSUBSCRIBE[1];\n          break;\n        case protobufMethodType.PUBLISH:\n          type = methodSchema.PUBLISH[1];\n          break;\n        case protobufMethodType.PRESENCE:\n          type = methodSchema.PRESENCE[1];\n          break;\n        case protobufMethodType.PRESENCE_STATS:\n          type = methodSchema.PRESENCE_STATS[1];\n          break;\n        case protobufMethodType.HISTORY:\n          type = methodSchema.HISTORY[1];\n          break;\n        case protobufMethodType.PING:\n          type = methodSchema.PING[1];\n          break;\n        case protobufMethodType.RPC:\n          type = methodSchema.RPC[1];\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: 'decodePush',\n    value: function decodePush(data) {\n      return this._decode(Push, data);\n    }\n  }, {\n    key: 'decodePushData',\n    value: function decodePushData(pushType, data) {\n      var type;\n      switch (pushType) {\n        case protobufPushType.PUBLICATION:\n          type = PushSchema.PUBLICATION;\n          break;\n        case protobufPushType.MESSAGE:\n          type = PushSchema.MESSAGE;\n          break;\n        case protobufPushType.JOIN:\n          type = PushSchema.JOIN;\n          break;\n        case protobufPushType.LEAVE:\n          type = PushSchema.LEAVE;\n          break;\n        case protobufPushType.UNSUB:\n          type = PushSchema.UNSUB;\n          break;\n      }\n      return this._decode(type, data);\n    }\n  }, {\n    key: '_decode',\n    value: function _decode(type, data) {\n      var res = void 0;\n      try {\n        res = type.decode(data);\n      } catch (err) {\n        return null;\n      }\n      return res;\n    }\n  }]);\n\n  return ProtobufDecoder;\n}();\n\nvar CentrifugeProtobuf = exports.CentrifugeProtobuf = function (_Centrifuge) {\n  _inherits(CentrifugeProtobuf, _Centrifuge);\n\n  function CentrifugeProtobuf() {\n    _classCallCheck(this, CentrifugeProtobuf);\n\n    return _possibleConstructorReturn(this, (CentrifugeProtobuf.__proto__ || Object.getPrototypeOf(CentrifugeProtobuf)).apply(this, arguments));\n  }\n\n  _createClass(CentrifugeProtobuf, [{\n    key: '_formatOverride',\n    value: function _formatOverride(format) {\n      if (format === 'protobuf') {\n        this._binary = true;\n        this._methodType = protobufMethodType;\n        this._pushType = protobufPushType;\n        this._encoder = new ProtobufEncoder();\n        this._decoder = new ProtobufDecoder();\n        return true;\n      }\n      return false;\n    }\n  }]);\n\n  return CentrifugeProtobuf;\n}(_centrifuge.Centrifuge);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// light library entry point.\r\n\r\n\r\nmodule.exports = __webpack_require__(35);\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = module.exports = __webpack_require__(36);\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = __webpack_require__(21);\r\nprotobuf.decoder          = __webpack_require__(26);\r\nprotobuf.verifier         = __webpack_require__(27);\r\nprotobuf.converter        = __webpack_require__(28);\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = __webpack_require__(4);\r\nprotobuf.Namespace        = __webpack_require__(8);\r\nprotobuf.Root             = __webpack_require__(30);\r\nprotobuf.Enum             = __webpack_require__(1);\r\nprotobuf.Type             = __webpack_require__(22);\r\nprotobuf.Field            = __webpack_require__(5);\r\nprotobuf.OneOf            = __webpack_require__(15);\r\nprotobuf.MapField         = __webpack_require__(23);\r\nprotobuf.Service          = __webpack_require__(24);\r\nprotobuf.Method           = __webpack_require__(25);\r\n\r\n// Runtime\r\nprotobuf.Message          = __webpack_require__(16);\r\nprotobuf.wrappers         = __webpack_require__(29);\r\n\r\n// Utility\r\nprotobuf.types            = __webpack_require__(9);\r\nprotobuf.util             = __webpack_require__(0);\r\n\r\n// Configure reflection\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = __webpack_require__(13);\r\nprotobuf.BufferWriter = __webpack_require__(43);\r\nprotobuf.Reader       = __webpack_require__(14);\r\nprotobuf.BufferReader = __webpack_require__(44);\r\n\r\n// Utility\r\nprotobuf.util         = __webpack_require__(2);\r\nprotobuf.rpc          = __webpack_require__(19);\r\nprotobuf.roots        = __webpack_require__(20);\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = LongBits;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = __webpack_require__(13);\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = __webpack_require__(14);\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = Service;\r\n\r\nvar util = __webpack_require__(2);\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = __webpack_require__(17),\r\n    inquire   = __webpack_require__(18);\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"connInfo\":{\"type\":\"bytes\",\"id\":3},\"chanInfo\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"numClients\":{\"type\":\"uint32\",\"id\":1},\"numUsers\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// centrifuge.protobuf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 933b3e14fcbd4d603172","\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Enum;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\r\n\r\nvar Namespace = require(\"./namespace\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new enum instance.\r\n * @classdesc Reflected enum.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {Object.<string,number>} [values] Enum values as an object, by name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this enum\r\n * @param {Object.<string,string>} [comments] The value comments for this enum\r\n */\r\nfunction Enum(name, values, options, comment, comments) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (values && typeof values !== \"object\")\r\n        throw TypeError(\"values must be an object\");\r\n\r\n    /**\r\n     * Enum values by id.\r\n     * @type {Object.<number,string>}\r\n     */\r\n    this.valuesById = {};\r\n\r\n    /**\r\n     * Enum values by name.\r\n     * @type {Object.<string,number>}\r\n     */\r\n    this.values = Object.create(this.valuesById); // toJSON, marker\r\n\r\n    /**\r\n     * Enum comment text.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n\r\n    /**\r\n     * Value comment texts, if any.\r\n     * @type {Object.<string,string>}\r\n     */\r\n    this.comments = comments || {};\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\r\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\r\n    // static and reflection code alike instead of emitting generic object definitions.\r\n\r\n    if (values)\r\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\r\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\r\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\r\n}\r\n\r\n/**\r\n * Enum descriptor.\r\n * @interface IEnum\r\n * @property {Object.<string,number>} values Enum values\r\n * @property {Object.<string,*>} [options] Enum options\r\n */\r\n\r\n/**\r\n * Constructs an enum from an enum descriptor.\r\n * @param {string} name Enum name\r\n * @param {IEnum} json Enum descriptor\r\n * @returns {Enum} Created enum\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nEnum.fromJSON = function fromJSON(name, json) {\r\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\r\n    enm.reserved = json.reserved;\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Converts this enum to an enum descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IEnum} Enum descriptor\r\n */\r\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"  , this.options,\r\n        \"values\"   , this.values,\r\n        \"reserved\" , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"comment\"  , keepComments ? this.comment : undefined,\r\n        \"comments\" , keepComments ? this.comments : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds a value to this enum.\r\n * @param {string} name Value name\r\n * @param {number} id Value id\r\n * @param {string} [comment] Comment, if any\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a value with this name or id\r\n */\r\nEnum.prototype.add = function add(name, id, comment) {\r\n    // utilized by the parser but not by .fromJSON\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (!util.isInteger(id))\r\n        throw TypeError(\"id must be an integer\");\r\n\r\n    if (this.values[name] !== undefined)\r\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\r\n\r\n    if (this.isReservedId(id))\r\n        throw Error(\"id \" + id + \" is reserved in \" + this);\r\n\r\n    if (this.isReservedName(name))\r\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\r\n\r\n    if (this.valuesById[id] !== undefined) {\r\n        if (!(this.options && this.options.allow_alias))\r\n            throw Error(\"duplicate id \" + id + \" in \" + this);\r\n        this.values[name] = id;\r\n    } else\r\n        this.valuesById[this.values[name] = id] = name;\r\n\r\n    this.comments[name] = comment || null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a value from this enum\r\n * @param {string} name Value name\r\n * @returns {Enum} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `name` is not a name of this enum\r\n */\r\nEnum.prototype.remove = function remove(name) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    var val = this.values[name];\r\n    if (val == null)\r\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\r\n\r\n    delete this.valuesById[val];\r\n    delete this.values[name];\r\n    delete this.comments[name];\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nEnum.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/enum.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/minimal.js\n// module id = 2\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0 1","\"use strict\";\r\nmodule.exports = ReflectionObject;\r\n\r\nReflectionObject.className = \"ReflectionObject\";\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar Root; // cyclic\r\n\r\n/**\r\n * Constructs a new reflection object instance.\r\n * @classdesc Base class of all reflection objects.\r\n * @constructor\r\n * @param {string} name Object name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @abstract\r\n */\r\nfunction ReflectionObject(name, options) {\r\n\r\n    if (!util.isString(name))\r\n        throw TypeError(\"name must be a string\");\r\n\r\n    if (options && !util.isObject(options))\r\n        throw TypeError(\"options must be an object\");\r\n\r\n    /**\r\n     * Options.\r\n     * @type {Object.<string,*>|undefined}\r\n     */\r\n    this.options = options; // toJSON\r\n\r\n    /**\r\n     * Unique name within its namespace.\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n\r\n    /**\r\n     * Parent namespace.\r\n     * @type {Namespace|null}\r\n     */\r\n    this.parent = null;\r\n\r\n    /**\r\n     * Whether already resolved or not.\r\n     * @type {boolean}\r\n     */\r\n    this.resolved = false;\r\n\r\n    /**\r\n     * Comment text, if any.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = null;\r\n\r\n    /**\r\n     * Defining file name.\r\n     * @type {string|null}\r\n     */\r\n    this.filename = null;\r\n}\r\n\r\nObject.defineProperties(ReflectionObject.prototype, {\r\n\r\n    /**\r\n     * Reference to the root namespace.\r\n     * @name ReflectionObject#root\r\n     * @type {Root}\r\n     * @readonly\r\n     */\r\n    root: {\r\n        get: function() {\r\n            var ptr = this;\r\n            while (ptr.parent !== null)\r\n                ptr = ptr.parent;\r\n            return ptr;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Full name including leading dot.\r\n     * @name ReflectionObject#fullName\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    fullName: {\r\n        get: function() {\r\n            var path = [ this.name ],\r\n                ptr = this.parent;\r\n            while (ptr) {\r\n                path.unshift(ptr.name);\r\n                ptr = ptr.parent;\r\n            }\r\n            return path.join(\".\");\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Converts this reflection object to its descriptor representation.\r\n * @returns {Object.<string,*>} Descriptor\r\n * @abstract\r\n */\r\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\r\n    throw Error(); // not implemented, shouldn't happen\r\n};\r\n\r\n/**\r\n * Called when this object is added to a parent.\r\n * @param {ReflectionObject} parent Parent added to\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onAdd = function onAdd(parent) {\r\n    if (this.parent && this.parent !== parent)\r\n        this.parent.remove(this);\r\n    this.parent = parent;\r\n    this.resolved = false;\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleAdd(this);\r\n};\r\n\r\n/**\r\n * Called when this object is removed from a parent.\r\n * @param {ReflectionObject} parent Parent removed from\r\n * @returns {undefined}\r\n */\r\nReflectionObject.prototype.onRemove = function onRemove(parent) {\r\n    var root = parent.root;\r\n    if (root instanceof Root)\r\n        root._handleRemove(this);\r\n    this.parent = null;\r\n    this.resolved = false;\r\n};\r\n\r\n/**\r\n * Resolves this objects type references.\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n    if (this.root instanceof Root)\r\n        this.resolved = true; // only if part of a root\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets an option value.\r\n * @param {string} name Option name\r\n * @returns {*} Option value or `undefined` if not set\r\n */\r\nReflectionObject.prototype.getOption = function getOption(name) {\r\n    if (this.options)\r\n        return this.options[name];\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Sets an option.\r\n * @param {string} name Option name\r\n * @param {*} value Option value\r\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\r\n        (this.options || (this.options = {}))[name] = value;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets multiple options.\r\n * @param {Object.<string,*>} options Options to set\r\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\r\n * @returns {ReflectionObject} `this`\r\n */\r\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\r\n    if (options)\r\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\r\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Converts this instance to its string representation.\r\n * @returns {string} Class name[, space, full name]\r\n */\r\nReflectionObject.prototype.toString = function toString() {\r\n    var className = this.constructor.className,\r\n        fullName  = this.fullName;\r\n    if (fullName.length)\r\n        return className + \" \" + fullName;\r\n    return className;\r\n};\r\n\r\nReflectionObject._configure = function(Root_) {\r\n    Root = Root_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/object.js\n// module id = 4\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Field;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\r\n\r\nvar Enum  = require(\"./enum\"),\r\n    types = require(\"./types\"),\r\n    util  = require(\"./util\");\r\n\r\nvar Type; // cyclic\r\n\r\nvar ruleRe = /^required|optional|repeated$/;\r\n\r\n/**\r\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\r\n * @name Field\r\n * @classdesc Reflected message field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a field from a field descriptor.\r\n * @param {string} name Field name\r\n * @param {IField} json Field descriptor\r\n * @returns {Field} Created field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nField.fromJSON = function fromJSON(name, json) {\r\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Field} instead.\r\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports FieldBase\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} type Value type\r\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\r\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction Field(name, id, type, rule, extend, options, comment) {\r\n\r\n    if (util.isObject(rule)) {\r\n        comment = extend;\r\n        options = rule;\r\n        rule = extend = undefined;\r\n    } else if (util.isObject(extend)) {\r\n        comment = options;\r\n        options = extend;\r\n        extend = undefined;\r\n    }\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    if (!util.isInteger(id) || id < 0)\r\n        throw TypeError(\"id must be a non-negative integer\");\r\n\r\n    if (!util.isString(type))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\r\n        throw TypeError(\"rule must be a string rule\");\r\n\r\n    if (extend !== undefined && !util.isString(extend))\r\n        throw TypeError(\"extend must be a string\");\r\n\r\n    /**\r\n     * Field rule, if any.\r\n     * @type {string|undefined}\r\n     */\r\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\r\n\r\n    /**\r\n     * Field type.\r\n     * @type {string}\r\n     */\r\n    this.type = type; // toJSON\r\n\r\n    /**\r\n     * Unique field id.\r\n     * @type {number}\r\n     */\r\n    this.id = id; // toJSON, marker\r\n\r\n    /**\r\n     * Extended type if different from parent.\r\n     * @type {string|undefined}\r\n     */\r\n    this.extend = extend || undefined; // toJSON\r\n\r\n    /**\r\n     * Whether this field is required.\r\n     * @type {boolean}\r\n     */\r\n    this.required = rule === \"required\";\r\n\r\n    /**\r\n     * Whether this field is optional.\r\n     * @type {boolean}\r\n     */\r\n    this.optional = !this.required;\r\n\r\n    /**\r\n     * Whether this field is repeated.\r\n     * @type {boolean}\r\n     */\r\n    this.repeated = rule === \"repeated\";\r\n\r\n    /**\r\n     * Whether this field is a map or not.\r\n     * @type {boolean}\r\n     */\r\n    this.map = false;\r\n\r\n    /**\r\n     * Message this field belongs to.\r\n     * @type {Type|null}\r\n     */\r\n    this.message = null;\r\n\r\n    /**\r\n     * OneOf this field belongs to, if any,\r\n     * @type {OneOf|null}\r\n     */\r\n    this.partOf = null;\r\n\r\n    /**\r\n     * The field type's default value.\r\n     * @type {*}\r\n     */\r\n    this.typeDefault = null;\r\n\r\n    /**\r\n     * The field's default value on prototypes.\r\n     * @type {*}\r\n     */\r\n    this.defaultValue = null;\r\n\r\n    /**\r\n     * Whether this field's value should be treated as a long.\r\n     * @type {boolean}\r\n     */\r\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\r\n\r\n    /**\r\n     * Whether this field's value is a buffer.\r\n     * @type {boolean}\r\n     */\r\n    this.bytes = type === \"bytes\";\r\n\r\n    /**\r\n     * Resolved type if not a basic type.\r\n     * @type {Type|Enum|null}\r\n     */\r\n    this.resolvedType = null;\r\n\r\n    /**\r\n     * Sister-field within the extended type if a declaring extension field.\r\n     * @type {Field|null}\r\n     */\r\n    this.extensionField = null;\r\n\r\n    /**\r\n     * Sister-field within the declaring namespace if an extended field.\r\n     * @type {Field|null}\r\n     */\r\n    this.declaringField = null;\r\n\r\n    /**\r\n     * Internally remembers whether this field is packed.\r\n     * @type {boolean|null}\r\n     * @private\r\n     */\r\n    this._packed = null;\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\r\n * @name Field#packed\r\n * @type {boolean}\r\n * @readonly\r\n */\r\nObject.defineProperty(Field.prototype, \"packed\", {\r\n    get: function() {\r\n        // defaults to packed=true if not explicity set to false\r\n        if (this._packed === null)\r\n            this._packed = this.getOption(\"packed\") !== false;\r\n        return this._packed;\r\n    }\r\n});\r\n\r\n/**\r\n * @override\r\n */\r\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\r\n    if (name === \"packed\") // clear cached before setting\r\n        this._packed = null;\r\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\r\n};\r\n\r\n/**\r\n * Field descriptor.\r\n * @interface IField\r\n * @property {string} [rule=\"optional\"] Field rule\r\n * @property {string} type Field type\r\n * @property {number} id Field id\r\n * @property {Object.<string,*>} [options] Field options\r\n */\r\n\r\n/**\r\n * Extension field descriptor.\r\n * @interface IExtensionField\r\n * @extends IField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Converts this field to a field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IField} Field descriptor\r\n */\r\nField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Resolves this field's type references.\r\n * @returns {Field} `this`\r\n * @throws {Error} If any reference cannot be resolved\r\n */\r\nField.prototype.resolve = function resolve() {\r\n\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\r\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\r\n        if (this.resolvedType instanceof Type)\r\n            this.typeDefault = null;\r\n        else // instanceof Enum\r\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\r\n    }\r\n\r\n    // use explicitly set default value if present\r\n    if (this.options && this.options[\"default\"] != null) {\r\n        this.typeDefault = this.options[\"default\"];\r\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\r\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\r\n    }\r\n\r\n    // remove unnecessary options\r\n    if (this.options) {\r\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\r\n            delete this.options.packed;\r\n        if (!Object.keys(this.options).length)\r\n            this.options = undefined;\r\n    }\r\n\r\n    // convert to internal data type if necesssary\r\n    if (this.long) {\r\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\r\n\r\n        /* istanbul ignore else */\r\n        if (Object.freeze)\r\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\r\n\r\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\r\n        var buf;\r\n        if (util.base64.test(this.typeDefault))\r\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\r\n        else\r\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\r\n        this.typeDefault = buf;\r\n    }\r\n\r\n    // take special care of maps and repeated fields\r\n    if (this.map)\r\n        this.defaultValue = util.emptyObject;\r\n    else if (this.repeated)\r\n        this.defaultValue = util.emptyArray;\r\n    else\r\n        this.defaultValue = this.typeDefault;\r\n\r\n    // ensure proper value on prototype\r\n    if (this.parent instanceof Type)\r\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\r\n * @typedef FieldDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} fieldName Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @param {T} [defaultValue] Default value\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\r\n */\r\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\r\n\r\n    // submessage: decorate the submessage and use its name as the type\r\n    if (typeof fieldType === \"function\")\r\n        fieldType = util.decorateType(fieldType).name;\r\n\r\n    // enum reference: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldType && typeof fieldType === \"object\")\r\n        fieldType = util.decorateEnum(fieldType).name;\r\n\r\n    return function fieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\r\n    };\r\n};\r\n\r\n/**\r\n * Field decorator (TypeScript).\r\n * @name Field.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {Constructor<T>|string} fieldType Field type\r\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends Message<T>\r\n * @variation 2\r\n */\r\n// like Field.d but without a default value\r\n\r\nField._configure = function configure(Type_) {\r\n    Type = Type_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/field.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 6\n// module chunks = 0 1","export function startsWith(value, prefix) {\n  return value.lastIndexOf(prefix, 0) === 0;\n};\n\nexport function isFunction(value) {\n  if (value === undefined || value === null) {\n    return false;\n  }\n  return typeof value === 'function';\n};\n\nexport function log(level, args) {\n  if (global.console) {\n    const logger = global.console[level];\n\n    if (isFunction(logger)) {\n      logger.apply(global.console, args);\n    }\n  }\n};\n\nexport function backoff(step, min, max) {\n  const jitter = 0.5 * Math.random();\n  const interval = Math.min(max, min * Math.pow(2, step + 1));\n\n  return Math.floor((1 - jitter) * interval);\n};\n\nexport function errorExists(data) {\n  return 'error' in data && data.error !== null;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","\"use strict\";\r\nmodule.exports = Namespace;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    Field    = require(\"./field\"),\r\n    util     = require(\"./util\");\r\n\r\nvar Type,    // cyclic\r\n    Service; // \"\r\n\r\n/**\r\n * Constructs a new namespace instance.\r\n * @name Namespace\r\n * @classdesc Reflected namespace.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\n\r\n/**\r\n * Constructs a namespace from JSON.\r\n * @memberof Namespace\r\n * @function\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} json JSON object\r\n * @returns {Namespace} Created namespace\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nNamespace.fromJSON = function fromJSON(name, json) {\r\n    return new Namespace(name, json.options).addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Converts an array of reflection objects to JSON.\r\n * @memberof Namespace\r\n * @param {ReflectionObject[]} array Object array\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\r\n */\r\nfunction arrayToJSON(array, toJSONOptions) {\r\n    if (!(array && array.length))\r\n        return undefined;\r\n    var obj = {};\r\n    for (var i = 0; i < array.length; ++i)\r\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\r\n    return obj;\r\n}\r\n\r\nNamespace.arrayToJSON = arrayToJSON;\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedId = function isReservedId(reserved, id) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] >= id)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nNamespace.isReservedName = function isReservedName(reserved, name) {\r\n    if (reserved)\r\n        for (var i = 0; i < reserved.length; ++i)\r\n            if (reserved[i] === name)\r\n                return true;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Not an actual constructor. Use {@link Namespace} instead.\r\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\r\n * @exports NamespaceBase\r\n * @extends ReflectionObject\r\n * @abstract\r\n * @constructor\r\n * @param {string} name Namespace name\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @see {@link Namespace}\r\n */\r\nfunction Namespace(name, options) {\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Nested objects by name.\r\n     * @type {Object.<string,ReflectionObject>|undefined}\r\n     */\r\n    this.nested = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached nested objects as an array.\r\n     * @type {ReflectionObject[]|null}\r\n     * @private\r\n     */\r\n    this._nestedArray = null;\r\n}\r\n\r\nfunction clearCache(namespace) {\r\n    namespace._nestedArray = null;\r\n    return namespace;\r\n}\r\n\r\n/**\r\n * Nested objects of this namespace as an array for iteration.\r\n * @name NamespaceBase#nestedArray\r\n * @type {ReflectionObject[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\r\n    get: function() {\r\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\r\n    }\r\n});\r\n\r\n/**\r\n * Namespace descriptor.\r\n * @interface INamespace\r\n * @property {Object.<string,*>} [options] Namespace options\r\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\r\n */\r\n\r\n/**\r\n * Any extension field descriptor.\r\n * @typedef AnyExtensionField\r\n * @type {IExtensionField|IExtensionMapField}\r\n */\r\n\r\n/**\r\n * Any nested object descriptor.\r\n * @typedef AnyNestedObject\r\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace}\r\n */\r\n// ^ BEWARE: VSCode hangs forever when using more than 5 types (that's why AnyExtensionField exists in the first place)\r\n\r\n/**\r\n * Converts this namespace to a namespace descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {INamespace} Namespace descriptor\r\n */\r\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds nested objects to this namespace from nested object descriptors.\r\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\r\n    var ns = this;\r\n    /* istanbul ignore else */\r\n    if (nestedJson) {\r\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\r\n            nested = nestedJson[names[i]];\r\n            ns.add( // most to least likely\r\n                ( nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Gets the nested object of the specified name.\r\n * @param {string} name Nested object name\r\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\r\n */\r\nNamespace.prototype.get = function get(name) {\r\n    return this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Gets the values of the nested {@link Enum|enum} of the specified name.\r\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\r\n * @param {string} name Nested enum name\r\n * @returns {Object.<string,number>} Enum values\r\n * @throws {Error} If there is no such enum\r\n */\r\nNamespace.prototype.getEnum = function getEnum(name) {\r\n    if (this.nested && this.nested[name] instanceof Enum)\r\n        return this.nested[name].values;\r\n    throw Error(\"no such enum: \" + name);\r\n};\r\n\r\n/**\r\n * Adds a nested object to this namespace.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name\r\n */\r\nNamespace.prototype.add = function add(object) {\r\n\r\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type || object instanceof Enum || object instanceof Service || object instanceof Namespace))\r\n        throw TypeError(\"object must be a valid nested object\");\r\n\r\n    if (!this.nested)\r\n        this.nested = {};\r\n    else {\r\n        var prev = this.get(object.name);\r\n        if (prev) {\r\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\r\n                // replace plain namespace but keep existing nested elements and options\r\n                var nested = prev.nestedArray;\r\n                for (var i = 0; i < nested.length; ++i)\r\n                    object.add(nested[i]);\r\n                this.remove(prev);\r\n                if (!this.nested)\r\n                    this.nested = {};\r\n                object.setOptions(prev.options, true);\r\n\r\n            } else\r\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n        }\r\n    }\r\n    this.nested[object.name] = object;\r\n    object.onAdd(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this namespace.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Namespace} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this namespace\r\n */\r\nNamespace.prototype.remove = function remove(object) {\r\n\r\n    if (!(object instanceof ReflectionObject))\r\n        throw TypeError(\"object must be a ReflectionObject\");\r\n    if (object.parent !== this)\r\n        throw Error(object + \" is not a member of \" + this);\r\n\r\n    delete this.nested[object.name];\r\n    if (!Object.keys(this.nested).length)\r\n        this.nested = undefined;\r\n\r\n    object.onRemove(this);\r\n    return clearCache(this);\r\n};\r\n\r\n/**\r\n * Defines additial namespaces within this one if not yet existing.\r\n * @param {string|string[]} path Path to create\r\n * @param {*} [json] Nested types to create from JSON\r\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\r\n */\r\nNamespace.prototype.define = function define(path, json) {\r\n\r\n    if (util.isString(path))\r\n        path = path.split(\".\");\r\n    else if (!Array.isArray(path))\r\n        throw TypeError(\"illegal path\");\r\n    if (path && path.length && path[0] === \"\")\r\n        throw Error(\"path must be relative\");\r\n\r\n    var ptr = this;\r\n    while (path.length > 0) {\r\n        var part = path.shift();\r\n        if (ptr.nested && ptr.nested[part]) {\r\n            ptr = ptr.nested[part];\r\n            if (!(ptr instanceof Namespace))\r\n                throw Error(\"path conflicts with non-namespace objects\");\r\n        } else\r\n            ptr.add(ptr = new Namespace(part));\r\n    }\r\n    if (json)\r\n        ptr.addJSON(json);\r\n    return ptr;\r\n};\r\n\r\n/**\r\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\r\n * @returns {Namespace} `this`\r\n */\r\nNamespace.prototype.resolveAll = function resolveAll() {\r\n    var nested = this.nestedArray, i = 0;\r\n    while (i < nested.length)\r\n        if (nested[i] instanceof Namespace)\r\n            nested[i++].resolveAll();\r\n        else\r\n            nested[i++].resolve();\r\n    return this.resolve();\r\n};\r\n\r\n/**\r\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\r\n * @param {string|string[]} path Path to look up\r\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\r\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n */\r\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\r\n\r\n    /* istanbul ignore next */\r\n    if (typeof filterTypes === \"boolean\") {\r\n        parentAlreadyChecked = filterTypes;\r\n        filterTypes = undefined;\r\n    } else if (filterTypes && !Array.isArray(filterTypes))\r\n        filterTypes = [ filterTypes ];\r\n\r\n    if (util.isString(path) && path.length) {\r\n        if (path === \".\")\r\n            return this.root;\r\n        path = path.split(\".\");\r\n    } else if (!path.length)\r\n        return this;\r\n\r\n    // Start at root if path is absolute\r\n    if (path[0] === \"\")\r\n        return this.root.lookup(path.slice(1), filterTypes);\r\n\r\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\r\n    var found = this.get(path[0]);\r\n    if (found) {\r\n        if (path.length === 1) {\r\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\r\n                return found;\r\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\r\n            return found;\r\n\r\n    // Otherwise try each nested namespace\r\n    } else\r\n        for (var i = 0; i < this.nestedArray.length; ++i)\r\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\r\n                return found;\r\n\r\n    // If there hasn't been a match, try again at the parent\r\n    if (this.parent === null || parentAlreadyChecked)\r\n        return null;\r\n    return this.parent.lookup(path, filterTypes);\r\n};\r\n\r\n/**\r\n * Looks up the reflection object at the specified path, relative to this namespace.\r\n * @name NamespaceBase#lookup\r\n * @function\r\n * @param {string|string[]} path Path to look up\r\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\r\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\r\n * @variation 2\r\n */\r\n// lookup(path: string, [parentAlreadyChecked: boolean])\r\n\r\n/**\r\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type\r\n * @throws {Error} If `path` does not point to a type\r\n */\r\nNamespace.prototype.lookupType = function lookupType(path) {\r\n    var found = this.lookup(path, [ Type ]);\r\n    if (!found)\r\n        throw Error(\"no such type: \" + path);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Enum} Looked up enum\r\n * @throws {Error} If `path` does not point to an enum\r\n */\r\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\r\n    var found = this.lookup(path, [ Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Type} Looked up type or enum\r\n * @throws {Error} If `path` does not point to a type or enum\r\n */\r\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\r\n    var found = this.lookup(path, [ Type, Enum ]);\r\n    if (!found)\r\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\n/**\r\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\r\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\r\n * @param {string|string[]} path Path to look up\r\n * @returns {Service} Looked up service\r\n * @throws {Error} If `path` does not point to a service\r\n */\r\nNamespace.prototype.lookupService = function lookupService(path) {\r\n    var found = this.lookup(path, [ Service ]);\r\n    if (!found)\r\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\r\n    return found;\r\n};\r\n\r\nNamespace._configure = function(Type_, Service_) {\r\n    Type    = Type_;\r\n    Service = Service_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/namespace.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Common type constants.\r\n * @namespace\r\n */\r\nvar types = exports;\r\n\r\nvar util = require(\"./util\");\r\n\r\nvar s = [\r\n    \"double\",   // 0\r\n    \"float\",    // 1\r\n    \"int32\",    // 2\r\n    \"uint32\",   // 3\r\n    \"sint32\",   // 4\r\n    \"fixed32\",  // 5\r\n    \"sfixed32\", // 6\r\n    \"int64\",    // 7\r\n    \"uint64\",   // 8\r\n    \"sint64\",   // 9\r\n    \"fixed64\",  // 10\r\n    \"sfixed64\", // 11\r\n    \"bool\",     // 12\r\n    \"string\",   // 13\r\n    \"bytes\"     // 14\r\n];\r\n\r\nfunction bake(values, offset) {\r\n    var i = 0, o = {};\r\n    offset |= 0;\r\n    while (i < values.length) o[s[i + offset]] = values[i++];\r\n    return o;\r\n}\r\n\r\n/**\r\n * Basic type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n * @property {number} bytes=2 Ldelim wire type\r\n */\r\ntypes.basic = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2,\r\n    /* bytes    */ 2\r\n]);\r\n\r\n/**\r\n * Basic type defaults.\r\n * @type {Object.<string,*>}\r\n * @const\r\n * @property {number} double=0 Double default\r\n * @property {number} float=0 Float default\r\n * @property {number} int32=0 Int32 default\r\n * @property {number} uint32=0 Uint32 default\r\n * @property {number} sint32=0 Sint32 default\r\n * @property {number} fixed32=0 Fixed32 default\r\n * @property {number} sfixed32=0 Sfixed32 default\r\n * @property {number} int64=0 Int64 default\r\n * @property {number} uint64=0 Uint64 default\r\n * @property {number} sint64=0 Sint32 default\r\n * @property {number} fixed64=0 Fixed64 default\r\n * @property {number} sfixed64=0 Sfixed64 default\r\n * @property {boolean} bool=false Bool default\r\n * @property {string} string=\"\" String default\r\n * @property {Array.<number>} bytes=Array(0) Bytes default\r\n * @property {null} message=null Message default\r\n */\r\ntypes.defaults = bake([\r\n    /* double   */ 0,\r\n    /* float    */ 0,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 0,\r\n    /* sfixed32 */ 0,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 0,\r\n    /* sfixed64 */ 0,\r\n    /* bool     */ false,\r\n    /* string   */ \"\",\r\n    /* bytes    */ util.emptyArray,\r\n    /* message  */ null\r\n]);\r\n\r\n/**\r\n * Basic long type wire types.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n */\r\ntypes.long = bake([\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1\r\n], 7);\r\n\r\n/**\r\n * Allowed types for map keys with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n * @property {number} string=2 Ldelim wire type\r\n */\r\ntypes.mapKey = bake([\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0,\r\n    /* string   */ 2\r\n], 2);\r\n\r\n/**\r\n * Allowed types for packed repeated fields with their associated wire type.\r\n * @type {Object.<string,number>}\r\n * @const\r\n * @property {number} double=1 Fixed64 wire type\r\n * @property {number} float=5 Fixed32 wire type\r\n * @property {number} int32=0 Varint wire type\r\n * @property {number} uint32=0 Varint wire type\r\n * @property {number} sint32=0 Varint wire type\r\n * @property {number} fixed32=5 Fixed32 wire type\r\n * @property {number} sfixed32=5 Fixed32 wire type\r\n * @property {number} int64=0 Varint wire type\r\n * @property {number} uint64=0 Varint wire type\r\n * @property {number} sint64=0 Varint wire type\r\n * @property {number} fixed64=1 Fixed64 wire type\r\n * @property {number} sfixed64=1 Fixed64 wire type\r\n * @property {number} bool=0 Varint wire type\r\n */\r\ntypes.packed = bake([\r\n    /* double   */ 1,\r\n    /* float    */ 5,\r\n    /* int32    */ 0,\r\n    /* uint32   */ 0,\r\n    /* sint32   */ 0,\r\n    /* fixed32  */ 5,\r\n    /* sfixed32 */ 5,\r\n    /* int64    */ 0,\r\n    /* uint64   */ 0,\r\n    /* sint64   */ 0,\r\n    /* fixed64  */ 1,\r\n    /* sfixed64 */ 1,\r\n    /* bool     */ 0\r\n]);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/types.js\n// module id = 9\n// module chunks = 0","import EventEmitter from 'events';\nimport Subscription from './subscription';\n\nimport {\n  JsonEncoder,\n  JsonDecoder,\n  JsonMethodType,\n  JsonPushType\n} from './json';\n\nimport {\n  isFunction,\n  log,\n  startsWith,\n  errorExists,\n  backoff\n} from './utils';\n\nconst _errorTimeout = 'timeout';\n\nexport class Centrifuge extends EventEmitter {\n\n  constructor(url, options) {\n    super();\n    this._url = url;\n    this._sockjs = null;\n    this._isSockjs = false;\n    this._binary = false;\n    this._methodType = null;\n    this._pushType = null;\n    this._encoder = null;\n    this._decoder = null;\n    this._status = 'disconnected';\n    this._reconnect = true;\n    this._reconnecting = false;\n    this._transport = null;\n    this._transportName = null;\n    this._transportClosed = true;\n    this._messageId = 0;\n    this._clientID = null;\n    this._refreshRequired = false;\n    this._subs = {};\n    this._lastSeq = {};\n    this._lastGen = {};\n    this._lastEpoch = {};\n    this._messages = [];\n    this._isBatching = false;\n    this._isSubscribeBatching = false;\n    this._privateChannels = {};\n    this._numRefreshFailed = 0;\n    this._refreshTimeout = null;\n    this._pingTimeout = null;\n    this._pongTimeout = null;\n    this._subRefreshTimeouts = {};\n    this._retries = 0;\n    this._callbacks = {};\n    this._latency = null;\n    this._latencyStart = null;\n    this._connectData = null;\n    this._token = null;\n    this._config = {\n      debug: false,\n      sockjs: null,\n      promise: null,\n      minRetry: 1000,\n      maxRetry: 20000,\n      timeout: 5000,\n      ping: true,\n      pingInterval: 25000,\n      pongWaitTimeout: 5000,\n      privateChannelPrefix: '$',\n      onTransportClose: null,\n      sockjsServer: null,\n      sockjsTransports: [\n        'websocket',\n        'xdr-streaming',\n        'xhr-streaming',\n        'eventsource',\n        'iframe-eventsource',\n        'iframe-htmlfile',\n        'xdr-polling',\n        'xhr-polling',\n        'iframe-xhr-polling',\n        'jsonp-polling'\n      ],\n      refreshEndpoint: '/centrifuge/refresh',\n      refreshHeaders: {},\n      refreshParams: {},\n      refreshData: {},\n      refreshAttempts: null,\n      refreshInterval: 1000,\n      onRefreshFailed: null,\n      onRefresh: null,\n      subscribeEndpoint: '/centrifuge/subscribe',\n      subscribeHeaders: {},\n      subscribeParams: {},\n      subRefreshInterval: 1000,\n      onPrivateSubscribe: null\n    };\n    this._configure(options);\n  }\n\n  setToken(token) {\n    this._token = token;\n  }\n\n  setConnectData(data) {\n    this._connectData = data;\n  }\n\n  _ajax(url, params, headers, data, callback) {\n    let query = '';\n    this._debug('sending AJAX request to', url, 'with data', JSON.stringify(data));\n\n    const xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new global.ActiveXObject('Microsoft.XMLHTTP'));\n\n    for (const i in params) {\n      if (params.hasOwnProperty(i)) {\n        if (query.length > 0) {\n          query += '&';\n        }\n        query += encodeURIComponent(i) + '=' + encodeURIComponent(params[i]);\n      }\n    }\n    if (query.length > 0) {\n      query = '?' + query;\n    }\n    xhr.open('POST', url + query, true);\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    for (const headerName in headers) {\n      if (headers.hasOwnProperty(headerName)) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n      }\n    }\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          let data, parsed = false;\n          try {\n            data = JSON.parse(xhr.responseText);\n            parsed = true;\n          } catch (e) {\n            callback({\n              error: 'Invalid JSON. Data was: ' + xhr.responseText,\n              status: 200,\n              data: null\n            });\n          }\n          if (parsed) { // prevents double execution.\n            callback({\n              data: data,\n              status: 200\n            });\n          }\n        } else {\n          this._log('wrong status code in AJAX response', xhr.status);\n          callback({\n            status: xhr.status,\n            data: null\n          });\n        }\n      }\n    };\n    setTimeout(() => xhr.send(JSON.stringify(data)), 20);\n    return xhr;\n  };\n\n  _log() {\n    log('info', arguments);\n  };\n\n  _debug() {\n    if (this._config.debug === true) {\n      log('debug', arguments);\n    }\n  };\n\n  _websocketSupported() {\n    return !(typeof WebSocket !== 'function' && typeof WebSocket !== 'object');\n  };\n\n  _setFormat(format) {\n    if (this._formatOverride(format)) {\n      return;\n    }\n    if (format === 'protobuf') {\n      throw new Error('not implemented by JSON only Centrifuge client – use client with Protobuf');\n    }\n    this._binary = false;\n    this._methodType = JsonMethodType;\n    this._pushType = JsonPushType;\n    this._encoder = new JsonEncoder();\n    this._decoder = new JsonDecoder();\n  }\n\n  _formatOverride(format) {\n    return false;\n  }\n\n  _configure(configuration) {\n    if (!('Promise' in global)) {\n      throw new Error('Promise polyfill required');\n    }\n\n    Object.assign(this._config, configuration || {});\n    this._debug('centrifuge config', this._config);\n\n    if (!this._url) {\n      throw new Error('url required');\n    }\n\n    if (startsWith(this._url, 'ws') && this._url.indexOf('format=protobuf') > -1) {\n      this._setFormat('protobuf');\n    } else {\n      this._setFormat('json');\n    }\n\n    if (startsWith(this._url, 'http')) {\n      this._debug('client will try to connect to SockJS endpoint');\n      if (this._config.sockjs !== null) {\n        this._debug('SockJS explicitly provided in options');\n        this._sockjs = this._config.sockjs;\n      } else {\n        if (typeof global.SockJS === 'undefined') {\n          throw new Error('SockJS not found, use ws:// in url or include SockJS');\n        }\n        this._debug('use globally defined SockJS');\n        this._sockjs = global.SockJS;\n      }\n    } else {\n      this._debug('client will connect to websocket endpoint');\n    }\n  };\n\n  _setStatus(newStatus) {\n    if (this._status !== newStatus) {\n      this._debug('Status', this._status, '->', newStatus);\n      this._status = newStatus;\n    }\n  };\n\n  _isDisconnected() {\n    return this._status === 'disconnected';\n  };\n\n  _isConnecting() {\n    return this._status === 'connecting';\n  };\n\n  _isConnected() {\n    return this._status === 'connected';\n  };\n\n  _nextMessageId() {\n    return ++this._messageId;\n  };\n\n  _resetRetry() {\n    this._debug('reset retries count to 0');\n    this._retries = 0;\n  };\n\n  _getRetryInterval() {\n    const interval = backoff(this._retries, this._config.minRetry, this._config.maxRetry);\n\n    this._retries += 1;\n    return interval;\n  };\n\n  _clearConnectedState(reconnect) {\n    this._clientID = null;\n    this._stopPing();\n\n    // fire errbacks of registered outgoing calls.\n    for (const id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        const callbacks = this._callbacks[id];\n        clearTimeout(callbacks.timeout);\n        const errback = callbacks.errback;\n        if (!errback) {\n          continue;\n        }\n        errback(this._createErrorObject('disconnected'));\n      }\n    }\n    this._callbacks = {};\n\n    // fire unsubscribe events\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n\n        if (reconnect) {\n          if (sub._isSuccess()) {\n            sub._triggerUnsubscribe();\n            sub._recover = true;\n          }\n          sub._setSubscribing();\n        } else {\n          sub._setUnsubscribed();\n        }\n      }\n    }\n\n    // clear refresh timer\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    // clear sub refresh timers\n    for (const channel in this._subRefreshTimeouts) {\n      if (this._subRefreshTimeouts.hasOwnProperty(channel) && this._subRefreshTimeouts[channel]) {\n        this._clearSubRefreshTimeout(channel);\n      }\n    }\n    this._subRefreshTimeouts = {};\n\n    if (!this._reconnect) {\n      // completely clear subscriptions\n      this._subs = {};\n    }\n  };\n\n  _transportSend(commands) {\n    if (!commands.length) {\n      return;\n    }\n    if (!this._transport) {\n      throw new Error('transport not connected');\n    }\n    this._transport.send(this._encoder.encodeCommands(commands));\n  }\n\n  _setupTransport() {\n    this._isSockjs = false;\n\n    // detect transport to use - SockJS or Websocket\n    if (this._sockjs !== null) {\n      const sockjsOptions = {\n        transports: this._config.sockjsTransports\n      };\n\n      if (this._config.sockjsServer !== null) {\n        sockjsOptions.server = this._config.sockjsServer;\n      }\n      this._isSockjs = true;\n      this._transport = new this._sockjs(this._url, null, sockjsOptions);\n    } else {\n      if (!this._websocketSupported()) {\n        this._debug('No Websocket support and no SockJS configured, can not connect');\n        return;\n      }\n      this._transport = new WebSocket(this._url);\n      if (this._binary === true) {\n        this._transport.binaryType = 'arraybuffer';\n      }\n    }\n\n    this._transport.onopen = () => {\n      this._transportClosed = false;\n\n      if (this._isSockjs) {\n        this._transportName = 'sockjs-' + this._transport.transport;\n        this._transport.onheartbeat = () => this._restartPing();\n      } else {\n        this._transportName = 'websocket';\n      }\n\n      // Can omit method here due to zero value.\n      const msg = {\n        // method: this._methodType.CONNECT\n      };\n\n      if (this._token || this._connectData) {\n        msg.params = {};\n      }\n\n      if (this._token) {\n        msg.params.token = this._token;\n      }\n\n      if (this._connectData) {\n        msg.params.data = this._connectData;\n      }\n\n      this._latencyStart = new Date();\n      this._call(msg).then(result => {\n        this._connectResponse(this._decoder.decodeCommandResult(this._methodType.CONNECT, result.result));\n        if (result.next) {\n          result.next();\n        }\n      }, err => {\n        if (err.code === 109) { // token expired.\n          this._refreshRequired = true;\n        }\n        this._disconnect('connect error', true);\n      });\n    };\n\n    this._transport.onerror = error => {\n      this._debug('transport level error', error);\n    };\n\n    this._transport.onclose = closeEvent => {\n      this._transportClosed = true;\n      let reason = 'connection closed';\n      let needReconnect = true;\n\n      if (closeEvent && 'reason' in closeEvent && closeEvent.reason) {\n        try {\n          const advice = JSON.parse(closeEvent.reason);\n          this._debug('reason is an advice object', advice);\n          reason = advice.reason;\n          needReconnect = advice.reconnect;\n        } catch (e) {\n          reason = closeEvent.reason;\n          this._debug('reason is a plain string', reason);\n        }\n      }\n\n      // onTransportClose callback should be executed every time transport was closed.\n      // This can be helpful to catch failed connection events (because our disconnect\n      // event only called once and every future attempts to connect do not fire disconnect\n      // event again).\n      if (this._config.onTransportClose !== null) {\n        this._config.onTransportClose({\n          event: closeEvent,\n          reason: reason,\n          reconnect: needReconnect\n        });\n      }\n\n      this._disconnect(reason, needReconnect);\n\n      if (this._reconnect === true) {\n        this._reconnecting = true;\n        const interval = this._getRetryInterval();\n\n        this._debug('reconnect after ' + interval + ' milliseconds');\n        setTimeout(() => {\n          if (this._reconnect === true) {\n            if (this._refreshRequired) {\n              this._refresh();\n            } else {\n              this._connect();\n            }\n          }\n        }, interval);\n      }\n    };\n\n    this._transport.onmessage = event => {\n      this._dataReceived(event.data);\n    };\n  };\n\n  rpc(data) {\n    const msg = {\n      method: this._methodType.RPC,\n      params: {\n        data: data\n      }\n    };\n    return this._call(msg).then(result => {\n      if (result.next) {\n        result.next();\n      }\n      return this._decoder.decodeCommandResult(this._methodType.RPC, result.result);\n    });\n  }\n\n  send(data) {\n    const msg = {\n      method: this._methodType.SEND,\n      params: {\n        data: data\n      }\n    };\n\n    return this._callAsync(msg);\n  }\n\n  _dataReceived(data) {\n    const replies = this._decoder.decodeReplies(data);\n    // we have to guarantee order of events in replies processing - i.e. start processing\n    // next reply only when we finished processing of current one. Without syncing things in\n    // this way we could get wrong publication events order as reply promises resolve\n    // on next loop tick so for loop continues before we finished emitting all reply events.\n    let p = Promise.resolve();\n    for (const i in replies) {\n      if (replies.hasOwnProperty(i)) {\n        p = p.then(() => {\n          return this._dispatchReply(replies[i]);\n        });\n      }\n    }\n    this._restartPing();\n  }\n\n  _callAsync(msg) {\n    this._addMessage(msg, true);\n  }\n\n  _call(msg) {\n    return new global.Promise((resolve, reject) => {\n      const id = this._addMessage(msg);\n      this._registerCall(id, resolve, reject);\n    });\n  }\n\n  _connect() {\n    if (this.isConnected()) {\n      this._debug('connect called when already connected');\n      return;\n    }\n    if (this._status === 'connecting') {\n      return;\n    }\n\n    this._debug('start connecting');\n    this._setStatus('connecting');\n    this._clientID = null;\n    this._reconnect = true;\n    this._setupTransport();\n  };\n\n  _disconnect(reason, shouldReconnect) {\n\n    if (this._isDisconnected()) {\n      return;\n    }\n\n    this._debug('disconnected:', reason, shouldReconnect);\n\n    const reconnect = shouldReconnect || false;\n\n    if (reconnect === false) {\n      this._reconnect = false;\n    }\n\n    this._clearConnectedState(reconnect);\n\n    if (!this._isDisconnected()) {\n      this._setStatus('disconnected');\n      if (this._refreshTimeout) {\n        clearTimeout(this._refreshTimeout);\n        this._refreshTimeout = null;\n      }\n      if (this._reconnecting === false) {\n        this.emit('disconnect', {\n          reason: reason,\n          reconnect: reconnect\n        });\n      }\n    }\n\n    if (!this._transportClosed) {\n      this._transport.close();\n    }\n  };\n\n  _refreshFailed() {\n    this._numRefreshFailed = 0;\n    if (!this._isDisconnected()) {\n      this._disconnect('refresh failed', false);\n    }\n    if (this._config.onRefreshFailed !== null) {\n      this._config.onRefreshFailed();\n    }\n  };\n\n  _refresh() {\n    // ask application for new connection token.\n    this._debug('refresh token');\n\n    if (this._config.refreshAttempts === 0) {\n      this._debug('refresh attempts set to 0, do not send refresh request at all');\n      this._refreshFailed();\n      return;\n    }\n\n    if (this._refreshTimeout !== null) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        // We don't perform any connection status related actions here as we are\n        // relying on server that must close connection eventually.\n        if (resp.error) {\n          this._debug('error refreshing connection token', resp.error);\n        } else {\n          this._debug('error refreshing connection token: wrong status code', resp.status);\n        }\n        this._numRefreshFailed++;\n        if (this._refreshTimeout !== null) {\n          clearTimeout(this._refreshTimeout);\n          this._refreshTimeout = null;\n        }\n        if (this._config.refreshAttempts !== null && this._numRefreshFailed >= this._config.refreshAttempts) {\n          this._refreshFailed();\n          return;\n        }\n        const jitter = Math.round(Math.random() * 1000 * Math.max(this._numRefreshFailed, 20));\n        const interval = this._config.refreshInterval + jitter;\n        this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n        return;\n      }\n      this._numRefreshFailed = 0;\n      this._token = resp.data.token;\n      if (!this._token) {\n        this._refreshFailed();\n        return;\n      }\n      if (this._isDisconnected() && this._reconnect) {\n        this._debug('token refreshed, connect from scratch');\n        this._connect();\n      } else {\n        this._debug('send refreshed token');\n        const msg = {\n          method: this._methodType.REFRESH,\n          params: {\n            token: this._token\n          }\n        };\n        this._call(msg).then(result => {\n          this._refreshResponse(this._decoder.decodeCommandResult(this._methodType.REFRESH, result.result));\n          if (result.next) {\n            result.next();\n          }\n        }, err => {\n          this._refreshError(err);\n        });\n      }\n    };\n\n    if (this._config.onRefresh !== null) {\n      const context = {};\n      this._config.onRefresh(context, cb);\n    } else {\n      this._ajax(\n        this._config.refreshEndpoint,\n        this._config.refreshParams,\n        this._config.refreshHeaders,\n        this._config.refreshData,\n        cb\n      );\n    }\n  };\n\n  _refreshError(err) {\n    this._debug('refresh error', err);\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    const interval = this._config.refreshInterval + Math.round(Math.random() * 1000);\n    this._refreshTimeout = setTimeout(() => this._refresh(), interval);\n  }\n\n  _refreshResponse(result) {\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n      this._refreshTimeout = null;\n    }\n    if (result.expires) {\n      this._clientID = result.client;\n      this._refreshTimeout = setTimeout(() => this._refresh(), result.ttl * 1000);\n    }\n  };\n\n  _subRefresh(channel) {\n    this._debug('refresh subscription token for channel', channel);\n\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      this._clearSubRefreshTimeout(channel);\n    } else {\n      return;\n    }\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      const token = channelsData[channel];\n      if (!token) {\n        return;\n      }\n      const msg = {\n        method: this._methodType.SUB_REFRESH,\n        params: {\n          channel: channel,\n          token: token\n        }\n      };\n\n      const sub = this._getSub(channel);\n      if (sub === null) {\n        return;\n      }\n\n      this._call(msg).then(result => {\n        this._subRefreshResponse(\n          channel,\n          this._decoder.decodeCommandResult(this._methodType.SUB_REFRESH, result.result)\n        );\n        if (result.next) {\n          result.next();\n        }\n      }, err => {\n        this._subRefreshError(channel, err);\n      });\n    };\n\n    const data = {\n      client: this._clientID,\n      channels: [channel]\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n    }\n  };\n\n  _clearSubRefreshTimeout(channel) {\n    if (this._subRefreshTimeouts[channel] !== undefined) {\n      clearTimeout(this._subRefreshTimeouts[channel]);\n      delete this._subRefreshTimeouts[channel];\n    }\n  }\n\n  _subRefreshError(channel, err) {\n    this._debug('subscription refresh error', channel, err);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    const jitter = Math.round(Math.random() * 1000);\n    let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), this._config.subRefreshInterval + jitter);\n    this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    return;\n  }\n\n  _subRefreshResponse(channel, result) {\n    this._debug('subscription refresh success', channel);\n    this._clearSubRefreshTimeout(channel);\n    const sub = this._getSub(channel);\n    if (sub === null) {\n      return;\n    }\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), result.ttl * 1000);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n    return;\n  };\n\n  _subscribe(sub, isResubscribe) {\n    this._debug('subscribing on', sub.channel);\n    const channel = sub.channel;\n\n    if (!(channel in this._subs)) {\n      this._subs[channel] = sub;\n    }\n\n    if (!this.isConnected()) {\n      // subscribe will be called later\n      sub._setNew();\n      return;\n    }\n\n    sub._setSubscribing(isResubscribe);\n\n    const msg = {\n      method: this._methodType.SUBSCRIBE,\n      params: {\n        channel: channel\n      }\n    };\n\n    // If channel name does not start with privateChannelPrefix - then we\n    // can just send subscription message to Centrifuge. If channel name\n    // starts with privateChannelPrefix - then this is a private channel\n    // and we should ask web application backend for permission first.\n    if (startsWith(channel, this._config.privateChannelPrefix)) {\n      // private channel.\n      if (this._isSubscribeBatching) {\n        this._privateChannels[channel] = true;\n      } else {\n        this.startSubscribeBatching();\n        this._subscribe(sub);\n        this.stopSubscribeBatching();\n      }\n    } else {\n      const recover = sub._needRecover();\n\n      if (recover === true) {\n        msg.params.recover = true;\n        const seq = this._getLastSeq(channel);\n        if (seq) {\n          msg.params.seq = seq;\n        }\n        const gen = this._getLastGen(channel);\n        if (gen) {\n          msg.params.gen = gen;\n        }\n        const epoch = this._getLastEpoch(channel);\n        if (epoch) {\n          msg.params.epoch = epoch;\n        }\n      }\n\n      this._call(msg).then(result => {\n        this._subscribeResponse(channel, this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, result.result));\n        if (result.next) {\n          result.next();\n        }\n      }, err => {\n        this._subscribeError(channel, err);\n      });\n    }\n  };\n\n  _unsubscribe(sub) {\n    if (this.isConnected()) {\n      // No need to unsubscribe in disconnected state - i.e. client already unsubscribed.\n      this._addMessage({\n        method: this._methodType.UNSUBSCRIBE,\n        params: {\n          channel: sub.channel\n        }\n      });\n    }\n  };\n\n  getSub(channel) {\n    return this._getSub(channel);\n  }\n\n  _getSub(channel) {\n    const sub = this._subs[channel];\n    if (!sub) {\n      return null;\n    }\n    return sub;\n  };\n\n  _connectResponse(result) {\n    const wasReconnecting = this._reconnecting;\n    this._reconnecting = false;\n    this._resetRetry();\n\n    if (this.isConnected()) {\n      return;\n    }\n\n    if (this._latencyStart !== null) {\n      this._latency = (new Date()).getTime() - this._latencyStart.getTime();\n      this._latencyStart = null;\n    }\n\n    this._clientID = result.client;\n    this._setStatus('connected');\n\n    if (this._refreshTimeout) {\n      clearTimeout(this._refreshTimeout);\n    }\n\n    if (result.expires) {\n      this._refreshTimeout = setTimeout(() => this._refresh(), result.ttl * 1000);\n    }\n\n    this.startBatching();\n    this.startSubscribeBatching();\n    for (const channel in this._subs) {\n      if (this._subs.hasOwnProperty(channel)) {\n        const sub = this._subs[channel];\n        if (sub._shouldResubscribe()) {\n          this._subscribe(sub, wasReconnecting);\n        }\n      }\n    }\n    this.stopSubscribeBatching();\n    this.stopBatching();\n\n    this._startPing();\n\n    const ctx = {\n      client: result.client,\n      transport: this._transportName,\n      latency: this._latency\n    };\n    if (result.data) {\n      ctx.data = result.data;\n    }\n\n    this.emit('connect', ctx);\n  };\n\n  _stopPing() {\n    if (this._pongTimeout !== null) {\n      clearTimeout(this._pongTimeout);\n      this._pongTimeout = null;\n    }\n    if (this._pingTimeout !== null) {\n      clearTimeout(this._pingTimeout);\n      this._pingTimeout = null;\n    }\n  };\n\n  _startPing() {\n    if (this._config.ping !== true || this._config.pingInterval <= 0) {\n      return;\n    }\n    if (!this.isConnected()) {\n      return;\n    }\n\n    this._pingTimeout = setTimeout(() => {\n      if (!this.isConnected()) {\n        this._stopPing();\n        return;\n      }\n      this.ping();\n      this._pongTimeout = setTimeout(() => {\n        this._disconnect('no ping', true);\n      }, this._config.pongWaitTimeout);\n    }, this._config.pingInterval);\n  };\n\n  _restartPing() {\n    this._stopPing();\n    this._startPing();\n  };\n\n  _subscribeError(channel, error) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n    if (error.code === 0 && error.message === _errorTimeout) { // client side timeout.\n      this._disconnect('timeout', true);\n      return;\n    }\n    sub._setSubscribeError(error);\n  };\n\n  _subscribeResponse(channel, result) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (!sub._isSubscribing()) {\n      return;\n    }\n\n    let recovered = false;\n    if ('recovered' in result) {\n      recovered = result.recovered;\n    }\n    sub._setSubscribeSuccess(recovered);\n\n    let pubs = result.publications;\n\n    if (pubs && pubs.length > 0) {\n      // handle missed pubs.\n      pubs = pubs.reverse();\n      for (let i in pubs) {\n        if (pubs.hasOwnProperty(i)) {\n          this._handlePublication(channel, pubs[i]);\n        }\n      }\n    } else {\n      if (result.recoverable) {\n        this._lastSeq[channel] = result.seq || 0;\n        this._lastGen[channel] = result.gen || 0;\n      }\n    }\n\n    this._lastEpoch[channel] = result.epoch || '';\n\n    if (result.recoverable) {\n      sub._recoverable = true;\n    }\n\n    if (result.expires === true) {\n      let subRefreshTimeout = setTimeout(() => this._subRefresh(channel), result.ttl * 1000);\n      this._subRefreshTimeouts[channel] = subRefreshTimeout;\n    }\n  };\n\n  _handleReply(reply, next) {\n    const id = reply.id;\n    const result = reply.result;\n\n    if (!(id in this._callbacks)) {\n      return;\n    }\n    const callbacks = this._callbacks[id];\n    clearTimeout(this._callbacks[id].timeout);\n    delete this._callbacks[id];\n\n    if (!errorExists(reply)) {\n      const callback = callbacks.callback;\n      if (!callback) {\n        return;\n      }\n      callback({result, next});\n    } else {\n      const errback = callbacks.errback;\n      if (!errback) {\n        return;\n      }\n      errback(reply.error);\n    }\n  }\n\n  _handleJoin(channel, join) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('join', join);\n  };\n\n  _handleLeave(channel, leave) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.emit('leave', leave);\n  };\n\n  _handleUnsub(channel, unsub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    sub.unsubscribe();\n    if (unsub.resubscribe === true) {\n      sub.subscribe();\n    }\n  };\n\n  _handlePublication(channel, pub) {\n    const sub = this._getSub(channel);\n    if (!sub) {\n      return;\n    }\n    if (pub.seq !== undefined) {\n      this._lastSeq[channel] = pub.seq;\n    }\n    if (pub.gen !== undefined) {\n      this._lastGen[channel] = pub.gen;\n    }\n    sub.emit('publish', pub);\n  };\n\n  _handleMessage(message) {\n    this.emit('message', message.data);\n  };\n\n  _handlePush(data, next) {\n    const push = this._decoder.decodePush(data);\n    let type = 0;\n    if ('type' in push) {\n      type = push['type'];\n    }\n    const channel = push.channel;\n\n    if (type === this._pushType.PUBLICATION) {\n      const pub = this._decoder.decodePushData(this._pushType.PUBLICATION, push.data);\n      this._handlePublication(channel, pub);\n    } else if (type === this._pushType.MESSAGE) {\n      const message = this._decoder.decodePushData(this._pushType.MESSAGE, push.data);\n      this._handleMessage(message);\n    } else if (type === this._pushType.JOIN) {\n      const join = this._decoder.decodePushData(this._pushType.JOIN, push.data);\n      this._handleJoin(channel, join);\n    } else if (type === this._pushType.LEAVE) {\n      const leave = this._decoder.decodePushData(this._pushType.LEAVE, push.data);\n      this._handleLeave(channel, leave);\n    } else if (type === this._pushType.UNSUB) {\n      const unsub = this._decoder.decodePushData(this._pushType.UNSUB, push.data);\n      this._handleUnsub(channel, unsub);\n    }\n    next();\n  }\n\n  _dispatchReply(reply) {\n    var next;\n    const p = new Promise(resolve =>{\n      next = resolve;\n    });\n\n    if (reply === undefined || reply === null) {\n      this._debug('dispatch: got undefined or null reply');\n      next();\n      return p;\n    }\n\n    const id = reply.id;\n\n    if (id && id > 0) {\n      this._handleReply(reply, next);\n    } else {\n      this._handlePush(reply.result, next);\n    }\n\n    return p;\n  };\n\n  _flush() {\n    const messages = this._messages.slice(0);\n    this._messages = [];\n    this._transportSend(messages);\n  };\n\n  _ping() {\n    const msg = {\n      method: this._methodType.PING\n    };\n    this._call(msg).then(result => {\n      this._pingResponse(this._decoder.decodeCommandResult(this._methodType.PING, result.result));\n      result.next();\n    }, err => {\n      this._debug('ping error', err);\n    });\n  };\n\n  _pingResponse(result) {\n    if (!this.isConnected()) {\n      return;\n    }\n    this._stopPing();\n    this._startPing();\n  }\n\n  _getLastSeq(channel) {\n    const lastSeq = this._lastSeq[channel];\n    if (lastSeq) {\n      return lastSeq;\n    }\n    return 0;\n  };\n\n  _getLastGen(channel) {\n    const lastGen = this._lastGen[channel];\n    if (lastGen) {\n      return lastGen;\n    }\n    return 0;\n  };\n\n  _getLastEpoch(channel) {\n    const lastEpoch = this._lastEpoch[channel];\n    if (lastEpoch) {\n      return lastEpoch;\n    }\n    return '';\n  };\n\n  _createErrorObject(message, code) {\n    const errObject = {\n      message: message,\n      code: code || 0\n    };\n\n    return errObject;\n  };\n\n  _registerCall(id, callback, errback) {\n    this._callbacks[id] = {\n      callback: callback,\n      errback: errback,\n      timeout: null\n    };\n    this._callbacks[id].timeout = setTimeout(() => {\n      delete this._callbacks[id];\n      if (isFunction(errback)) {\n        errback(this._createErrorObject(_errorTimeout));\n      }\n    }, this._config.timeout);\n  };\n\n  _addMessage(message, async) {\n    let id;\n    if (!async) {\n      id = this._nextMessageId();\n      message.id = id;\n    }\n    if (this._isBatching === true) {\n      this._messages.push(message);\n    } else {\n      this._transportSend([message]);\n    }\n    if (!async) {\n      return id;\n    }\n    return 0;\n  };\n\n  isConnected() {\n    return this._isConnected();\n  }\n\n  connect() {\n    this._connect();\n  };\n\n  disconnect() {\n    this._disconnect('client', false);\n  };\n\n  ping() {\n    return this._ping();\n  }\n\n  startBatching() {\n    // start collecting messages without sending them to Centrifuge until flush\n    // method called\n    this._isBatching = true;\n  };\n\n  stopBatching() {\n    this._isBatching = false;\n    this._flush();\n  };\n\n  startSubscribeBatching() {\n    // start collecting private channels to create bulk authentication\n    // request to subscribeEndpoint when stopSubscribeBatching will be called\n    this._isSubscribeBatching = true;\n  };\n\n  stopSubscribeBatching() {\n    // create request to subscribeEndpoint with collected private channels\n    // to ask if this client can subscribe on each channel\n    this._isSubscribeBatching = false;\n    const authChannels = this._privateChannels;\n    this._privateChannels = {};\n\n    const channels = [];\n\n    for (const channel in authChannels) {\n      if (authChannels.hasOwnProperty(channel)) {\n        const sub = this._getSub(channel);\n        if (!sub) {\n          continue;\n        }\n        channels.push(channel);\n      }\n    }\n\n    if (channels.length === 0) {\n      this._debug('no private channels found, no need to make request');\n      return;\n    }\n\n    const data = {\n      client: this._clientID,\n      channels: channels\n    };\n\n    const cb = (resp) => {\n      if (resp.error || resp.status !== 200) {\n        this._debug('authorization request failed');\n        for (const i in channels) {\n          if (channels.hasOwnProperty(i)) {\n            const channel = channels[i];\n            this._subscribeError(channel, this._createErrorObject('authorization request failed'));\n          }\n        }\n        return;\n      }\n\n      let channelsData = {};\n      if (resp.data.channels) {\n        for (const i in resp.data.channels) {\n          const channelData = resp.data.channels[i];\n          if (!channelData.channel) {\n            continue;\n          }\n          channelsData[channelData.channel] = channelData.token;\n        }\n      }\n\n      // try to send all subscriptions in one request.\n      let batch = false;\n\n      if (!this._isBatching) {\n        this.startBatching();\n        batch = true;\n      }\n\n      for (const i in channels) {\n        if (channels.hasOwnProperty(i)) {\n          const channel = channels[i];\n          const token = channelsData[channel];\n\n          if (!token) {\n            // subscription:error\n            this._subscribeError(channel, this._createErrorObject('permission denied', 103));\n            continue;\n          } else {\n            const msg = {\n              method: this._methodType.SUBSCRIBE,\n              params: {\n                channel: channel,\n                token: token\n              }\n            };\n\n            const sub = this._getSub(channel);\n            if (sub === null) {\n              continue;\n            }\n\n            const recover = sub._needRecover();\n\n            if (recover === true) {\n              msg.params.recover = true;\n              const seq = this._getLastSeq(channel);\n              if (seq) {\n                msg.params.seq = seq;\n              }\n              const gen = this._getLastGen(channel);\n              if (gen) {\n                msg.params.gen = gen;\n              }\n              const epoch = this._getLastEpoch(channel);\n              if (epoch) {\n                msg.params.epoch = epoch;\n              }\n            }\n            this._call(msg).then(result => {\n              this._subscribeResponse(\n                channel,\n                this._decoder.decodeCommandResult(this._methodType.SUBSCRIBE, result.result)\n              );\n              if (result.next) {\n                result.next();\n              }\n            }, err => {\n              this._subscribeError(channel, err);\n            });\n          }\n        }\n      }\n\n      if (batch) {\n        this.stopBatching();\n      }\n\n    };\n\n    if (this._config.onPrivateSubscribe !== null) {\n      this._config.onPrivateSubscribe({\n        data: data\n      }, cb);\n    } else {\n      this._ajax(this._config.subscribeEndpoint, this._config.subscribeParams, this._config.subscribeHeaders, data, cb);\n    }\n  };\n\n  subscribe(channel, events) {\n    const currentSub = this._getSub(channel);\n    if (currentSub !== null) {\n      currentSub._setEvents(events);\n      if (currentSub._isUnsubscribed()) {\n        currentSub.subscribe();\n      }\n      return currentSub;\n    }\n    const sub = new Subscription(this, channel, events);\n    this._subs[channel] = sub;\n    sub.subscribe();\n    return sub;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/centrifuge.js","import EventEmitter from 'events';\n\nimport {\n  isFunction\n} from './utils';\n\nconst _STATE_NEW = 0;\nconst _STATE_SUBSCRIBING = 1;\nconst _STATE_SUCCESS = 2;\nconst _STATE_ERROR = 3;\nconst _STATE_UNSUBSCRIBED = 4;\n\nexport default class Subscription extends EventEmitter {\n  constructor(centrifuge, channel, events) {\n    super();\n    this.channel = channel;\n    this._centrifuge = centrifuge;\n    this._status = _STATE_NEW;\n    this._error = null;\n    this._isResubscribe = false;\n    this._ready = false;\n    this._subscriptionPromise = null;\n    this._noResubscribe = false;\n    this._recoverable = false;\n    this._recover = false;\n    this._setEvents(events);\n    this._initializePromise();\n    this._promises = {};\n  }\n\n  _initializePromise() {\n    // this helps us to wait until subscription will successfully\n    // subscribe and call actions such as presence, history etc in\n    // synchronous way.\n    this._ready = false;\n\n    this._subscriptionPromise = new global.Promise((resolve, reject) => {\n      this._resolve = value => {\n        this._ready = true;\n        resolve(value);\n      };\n      this._reject = err => {\n        this._ready = true;\n        reject(err);\n      };\n    });\n  };\n\n  _needRecover() {\n    return this._recoverable === true && this._recover === true;\n  };\n\n  _setEvents(events) {\n    if (!events) {\n      return;\n    }\n    if (isFunction(events)) {\n      // events is just a function to handle publication received from channel.\n      this.on('publish', events);\n    } else if (Object.prototype.toString.call(events) === Object.prototype.toString.call({})) {\n      const knownEvents = ['publish', 'join', 'leave', 'unsubscribe', 'subscribe', 'error'];\n      for (let i = 0, l = knownEvents.length; i < l; i++) {\n        const ev = knownEvents[i];\n        if (ev in events) {\n          this.on(ev, events[ev]);\n        }\n      }\n    }\n  };\n\n  _isNew() {\n    return this._status === _STATE_NEW;\n  };\n\n  _isUnsubscribed() {\n    return this._status === _STATE_UNSUBSCRIBED;\n  };\n\n  _isSubscribing() {\n    return this._status === _STATE_SUBSCRIBING;\n  };\n\n  _isReady() {\n    return this._status === _STATE_SUCCESS || this._status === _STATE_ERROR;\n  };\n\n  _isSuccess() {\n    return this._status === _STATE_SUCCESS;\n  };\n\n  _isError() {\n    return this._status === _STATE_ERROR;\n  };\n\n  _setNew() {\n    this._status = _STATE_NEW;\n  };\n\n  _setSubscribing(isResubscribe) {\n    this._isResubscribe = isResubscribe || false;\n    if (this._ready === true) {\n      // new promise for this subscription\n      this._initializePromise();\n    }\n    this._status = _STATE_SUBSCRIBING;\n  };\n\n  _setSubscribeSuccess(recovered) {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._status = _STATE_SUCCESS;\n    const successContext = this._getSubscribeSuccessContext(recovered);\n\n    this._recover = false;\n    this.emit('subscribe', successContext);\n    this._resolve(successContext);\n    for (const to in this._promises) {\n      clearTimeout(to);\n      this._promises[to].resolve();\n      delete this._promises[to];\n    }\n  };\n\n  _setSubscribeError(err) {\n    if (this._status === _STATE_ERROR) {\n      return;\n    }\n    this._status = _STATE_ERROR;\n    this._error = err;\n    const errContext = this._getSubscribeErrorContext();\n    this.emit('error', errContext);\n    this._reject(errContext);\n    for (const to in this._promises) {\n      clearTimeout(to);\n      this._promises[to].reject(err);\n      delete this._promises[to];\n    }\n  };\n\n  _triggerUnsubscribe() {\n    this.emit('unsubscribe', {\n      channel: this.channel\n    });\n  };\n\n  _setUnsubscribed(noResubscribe) {\n    this._centrifuge._clearSubRefreshTimeout(this.channel);\n    if (this._status === _STATE_UNSUBSCRIBED) {\n      return;\n    }\n    const needTrigger = this._status === _STATE_SUCCESS;\n    this._status = _STATE_UNSUBSCRIBED;\n    if (noResubscribe === true) {\n      this._recover = false;\n      this._noResubscribe = true;\n      delete this._centrifuge._lastSeq[this.channel];\n      delete this._centrifuge._lastGen[this.channel];\n      delete this._centrifuge._lastEpoch[this.channel];\n    }\n    if (needTrigger) {\n      this._triggerUnsubscribe();\n    }\n  };\n\n  _shouldResubscribe() {\n    return !this._noResubscribe;\n  };\n\n  _getSubscribeSuccessContext(recovered) {\n    return {\n      channel: this.channel,\n      isResubscribe: this._isResubscribe,\n      recovered: recovered\n    };\n  };\n\n  _getSubscribeErrorContext() {\n    const subscribeErrorContext = this._error;\n    subscribeErrorContext.channel = this.channel;\n    subscribeErrorContext.isResubscribe = this._isResubscribe;\n    return subscribeErrorContext;\n  };\n\n  ready(callback, errback) {\n    if (this._ready) {\n      if (this._isSuccess()) {\n        callback(this._getSubscribeSuccessContext());\n      } else {\n        errback(this._getSubscribeErrorContext());\n      }\n    }\n  };\n\n  subscribe() {\n    if (this._status === _STATE_SUCCESS) {\n      return;\n    }\n    this._noResubscribe = false;\n    this._centrifuge._subscribe(this);\n  };\n\n  unsubscribe() {\n    this._setUnsubscribed(true);\n    this._centrifuge._unsubscribe(this);\n  };\n\n  _methodCall(message, type) {\n    const methodCallPromise = new Promise((resolve, reject) => {\n      let subPromise;\n      if (this._isSuccess()) {\n        subPromise = Promise.resolve();\n      } else if (this._isError()) {\n        subPromise = Promise.reject(this._error);\n      } else {\n        subPromise = new Promise((res, rej) => {\n          const timeout = setTimeout(function () {\n            rej({'code': 0, 'message': 'timeout'});\n          }, this._centrifuge._config.timeout);\n          this._promises[timeout] = {\n            resolve: res,\n            reject: rej\n          };\n        });\n      }\n      subPromise.then(\n        () => {\n          return this._centrifuge._call(message).then(\n            result => {\n              resolve(this._centrifuge._decoder.decodeCommandResult(type, result.result));\n              if (result.next) {\n                result.next();\n              }\n            },\n            error => {\n              reject(error);\n            }\n          );\n        },\n        error => {\n          reject(error);\n        }\n      );\n    });\n    return methodCallPromise;\n  }\n\n  publish(data) {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PUBLISH,\n      params: {\n        channel: this.channel,\n        data: data\n      }\n    }, this._centrifuge._methodType.PUBLISH);\n  };\n\n  presence() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE);\n  };\n\n  presenceStats() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.PRESENCE_STATS,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.PRESENCE_STATS);\n  };\n\n  history() {\n    return this._methodCall({\n      method: this._centrifuge._methodType.HISTORY,\n      params: {\n        channel: this.channel\n      }\n    }, this._centrifuge._methodType.HISTORY);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/subscription.js","export const JsonMethodType = {\n  CONNECT: 0,\n  SUBSCRIBE: 1,\n  UNSUBSCRIBE: 2,\n  PUBLISH: 3,\n  PRESENCE: 4,\n  PRESENCE_STATS: 5,\n  HISTORY: 6,\n  PING: 7,\n  SEND: 8,\n  RPC: 9,\n  REFRESH: 10,\n  SUB_REFRESH: 11\n};\n\nexport const JsonPushType = {\n  PUBLICATION: 0,\n  JOIN: 1,\n  LEAVE: 2,\n  UNSUB: 3,\n  MESSAGE: 4\n};\n\nexport class JsonEncoder {\n  encodeCommands(commands) {\n    const encodedCommands = [];\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        encodedCommands.push(JSON.stringify(commands[i]));\n      }\n    }\n    return encodedCommands.join('\\n');\n  }\n}\n\nexport class JsonDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const encodedReplies = data.split('\\n');\n    for (const i in encodedReplies) {\n      if (encodedReplies.hasOwnProperty(i)) {\n        if (!encodedReplies[i]) {\n          continue;\n        }\n        const reply = JSON.parse(encodedReplies[i]);\n        replies.push(reply);\n      }\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    return data;\n  }\n\n  decodePush(data) {\n    return data;\n  }\n\n  decodePushData(pushType, data) {\n    return data;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/json.js","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader.js\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/oneof.js\n// module id = 15\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Message;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new message instance.\r\n * @classdesc Abstract runtime message.\r\n * @constructor\r\n * @param {Properties<T>} [properties] Properties to set\r\n * @template T extends object\r\n */\r\nfunction Message(properties) {\r\n    // not used internally\r\n    if (properties)\r\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n            this[keys[i]] = properties[keys[i]];\r\n}\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message.$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Reference to the reflected type.\r\n * @name Message#$type\r\n * @type {Type}\r\n * @readonly\r\n */\r\n\r\n/*eslint-disable valid-jsdoc*/\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<T>} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.create = function create(properties) {\r\n    return this.$type.create(properties);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encode = function encode(message, writer) {\r\n    return this.$type.encode(message, writer);\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its length as a varint.\r\n * @param {T|Object.<string,*>} message Message to encode\r\n * @param {Writer} [writer] Writer to use\r\n * @returns {Writer} Writer\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.$type.encodeDelimited(message, writer);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @name Message.decode\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decode = function decode(reader) {\r\n    return this.$type.decode(reader);\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its length as a varint.\r\n * @name Message.decodeDelimited\r\n * @function\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\r\n * @returns {T} Decoded message\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.decodeDelimited = function decodeDelimited(reader) {\r\n    return this.$type.decodeDelimited(reader);\r\n};\r\n\r\n/**\r\n * Verifies a message of this type.\r\n * @name Message.verify\r\n * @function\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n */\r\nMessage.verify = function verify(message) {\r\n    return this.$type.verify(message);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {T} Message instance\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.fromObject = function fromObject(object) {\r\n    return this.$type.fromObject(object);\r\n};\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {T} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @template T extends Message<T>\r\n * @this Constructor<T>\r\n */\r\nMessage.toObject = function toObject(message, options) {\r\n    return this.$type.toObject(message, options);\r\n};\r\n\r\n/**\r\n * Converts this message to JSON.\r\n * @returns {Object.<string,*>} JSON object\r\n */\r\nMessage.prototype.toJSON = function toJSON() {\r\n    return this.$type.toObject(this, util.toJSONOptions);\r\n};\r\n\r\n/*eslint-enable valid-jsdoc*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/message.js\n// module id = 16\n// module chunks = 0","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/aspromise/index.js\n// module id = 17\n// module chunks = 0","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/inquire/index.js\n// module id = 18\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc.js\n// module id = 19\n// module chunks = 0","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/roots.js\n// module id = 20\n// module chunks = 0","\"use strict\";\r\nmodule.exports = encoder;\r\n\r\nvar Enum     = require(\"./enum\"),\r\n    types    = require(\"./types\"),\r\n    util     = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial message type encoder.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genTypePartial(gen, field, fieldIndex, ref) {\r\n    return field.resolvedType.group\r\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\r\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\r\n}\r\n\r\n/**\r\n * Generates an encoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction encoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\r\n    (\"if(!w)\")\r\n        (\"w=Writer.create()\");\r\n\r\n    var i, ref;\r\n\r\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\r\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field    = fields[i].resolve(),\r\n            index    = mtype._fieldsArray.indexOf(field),\r\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            wireType = types.basic[type];\r\n            ref      = \"m\" + util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) {\r\n            gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name) // !== undefined && !== null\r\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\r\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\r\n            if (wireType === undefined) gen\r\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\r\n            else gen\r\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\r\n            gen\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n            // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\r\n\r\n            // Packed repeated\r\n            if (field.packed && types.packed[type] !== undefined) { gen\r\n\r\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\r\n        (\"for(var i=0;i<%s.length;++i)\", ref)\r\n            (\"w.%s(%s[i])\", type, ref)\r\n        (\"w.ldelim()\");\r\n\r\n            // Non-packed\r\n            } else { gen\r\n\r\n        (\"for(var i=0;i<%s.length;++i)\", ref);\r\n                if (wireType === undefined)\r\n            genTypePartial(gen, field, index, ref + \"[i]\");\r\n                else gen\r\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n            } gen\r\n    (\"}\");\r\n\r\n        // Non-repeated\r\n        } else {\r\n            if (field.optional) gen\r\n    (\"if(%s!=null&&m.hasOwnProperty(%j))\", ref, field.name); // !== undefined && !== null\r\n\r\n            if (wireType === undefined)\r\n        genTypePartial(gen, field, index, ref);\r\n            else gen\r\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\r\n\r\n        }\r\n    }\r\n\r\n    return gen\r\n    (\"return w\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/encoder.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/type.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\nmodule.exports = MapField;\r\n\r\n// extends Field\r\nvar Field = require(\"./field\");\r\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\r\n\r\nvar types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new map field instance.\r\n * @classdesc Reflected map field.\r\n * @extends FieldBase\r\n * @constructor\r\n * @param {string} name Unique name within its namespace\r\n * @param {number} id Unique id within its namespace\r\n * @param {string} keyType Key type\r\n * @param {string} type Value type\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction MapField(name, id, keyType, type, options, comment) {\r\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(keyType))\r\n        throw TypeError(\"keyType must be a string\");\r\n\r\n    /**\r\n     * Key type.\r\n     * @type {string}\r\n     */\r\n    this.keyType = keyType; // toJSON, marker\r\n\r\n    /**\r\n     * Resolved key type if not a basic type.\r\n     * @type {ReflectionObject|null}\r\n     */\r\n    this.resolvedKeyType = null;\r\n\r\n    // Overrides Field#map\r\n    this.map = true;\r\n}\r\n\r\n/**\r\n * Map field descriptor.\r\n * @interface IMapField\r\n * @extends {IField}\r\n * @property {string} keyType Key type\r\n */\r\n\r\n/**\r\n * Extension map field descriptor.\r\n * @interface IExtensionMapField\r\n * @extends IMapField\r\n * @property {string} extend Extended type\r\n */\r\n\r\n/**\r\n * Constructs a map field from a map field descriptor.\r\n * @param {string} name Field name\r\n * @param {IMapField} json Map field descriptor\r\n * @returns {MapField} Created map field\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMapField.fromJSON = function fromJSON(name, json) {\r\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this map field to a map field descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMapField} Map field descriptor\r\n */\r\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"keyType\" , this.keyType,\r\n        \"type\"    , this.type,\r\n        \"id\"      , this.id,\r\n        \"extend\"  , this.extend,\r\n        \"options\" , this.options,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMapField.prototype.resolve = function resolve() {\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\r\n    if (types.mapKey[this.keyType] === undefined)\r\n        throw Error(\"invalid key type: \" + this.keyType);\r\n\r\n    return Field.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * Map field decorator (TypeScript).\r\n * @name MapField.d\r\n * @function\r\n * @param {number} fieldId Field id\r\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\r\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\r\n * @returns {FieldDecorator} Decorator function\r\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\r\n */\r\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\r\n\r\n    // submessage value: decorate the submessage and use its name as the type\r\n    if (typeof fieldValueType === \"function\")\r\n        fieldValueType = util.decorateType(fieldValueType).name;\r\n\r\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\r\n    else if (fieldValueType && typeof fieldValueType === \"object\")\r\n        fieldValueType = util.decorateEnum(fieldValueType).name;\r\n\r\n    return function mapFieldDecorator(prototype, fieldName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\r\n    };\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/mapfield.js\n// module id = 23\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Service;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\r\n\r\nvar Method = require(\"./method\"),\r\n    util   = require(\"./util\"),\r\n    rpc    = require(\"./rpc\");\r\n\r\n/**\r\n * Constructs a new service instance.\r\n * @classdesc Reflected service.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Service name\r\n * @param {Object.<string,*>} [options] Service options\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nfunction Service(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Service methods.\r\n     * @type {Object.<string,Method>}\r\n     */\r\n    this.methods = {}; // toJSON, marker\r\n\r\n    /**\r\n     * Cached methods as an array.\r\n     * @type {Method[]|null}\r\n     * @private\r\n     */\r\n    this._methodsArray = null;\r\n}\r\n\r\n/**\r\n * Service descriptor.\r\n * @interface IService\r\n * @extends INamespace\r\n * @property {Object.<string,IMethod>} methods Method descriptors\r\n */\r\n\r\n/**\r\n * Constructs a service from a service descriptor.\r\n * @param {string} name Service name\r\n * @param {IService} json Service descriptor\r\n * @returns {Service} Created service\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nService.fromJSON = function fromJSON(name, json) {\r\n    var service = new Service(name, json.options);\r\n    /* istanbul ignore else */\r\n    if (json.methods)\r\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\r\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\r\n    if (json.nested)\r\n        service.addJSON(json.nested);\r\n    service.comment = json.comment;\r\n    return service;\r\n};\r\n\r\n/**\r\n * Converts this service to a service descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IService} Service descriptor\r\n */\r\nService.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , inherited && inherited.options || undefined,\r\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\r\n        \"nested\"  , inherited && inherited.nested || undefined,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Methods of this service as an array for iteration.\r\n * @name Service#methodsArray\r\n * @type {Method[]}\r\n * @readonly\r\n */\r\nObject.defineProperty(Service.prototype, \"methodsArray\", {\r\n    get: function() {\r\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\r\n    }\r\n});\r\n\r\nfunction clearCache(service) {\r\n    service._methodsArray = null;\r\n    return service;\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.get = function get(name) {\r\n    return this.methods[name]\r\n        || Namespace.prototype.get.call(this, name);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.resolveAll = function resolveAll() {\r\n    var methods = this.methodsArray;\r\n    for (var i = 0; i < methods.length; ++i)\r\n        methods[i].resolve();\r\n    return Namespace.prototype.resolve.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.add = function add(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Method) {\r\n        this.methods[object.name] = object;\r\n        object.parent = this;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nService.prototype.remove = function remove(object) {\r\n    if (object instanceof Method) {\r\n\r\n        /* istanbul ignore if */\r\n        if (this.methods[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.methods[object.name];\r\n        object.parent = null;\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Creates a runtime service using the specified rpc implementation.\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\r\n */\r\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\r\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\r\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\r\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\r\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\r\n            m: method,\r\n            q: method.resolvedRequestType.ctor,\r\n            s: method.resolvedResponseType.ctor\r\n        });\r\n    }\r\n    return rpcService;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/service.js\n// module id = 24\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Method;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\r\n\r\nvar util = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new service method instance.\r\n * @classdesc Reflected service method.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Method name\r\n * @param {string|undefined} type Method type, usually `\"rpc\"`\r\n * @param {string} requestType Request message type\r\n * @param {string} responseType Response message type\r\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\r\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] The comment for this method\r\n */\r\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment) {\r\n\r\n    /* istanbul ignore next */\r\n    if (util.isObject(requestStream)) {\r\n        options = requestStream;\r\n        requestStream = responseStream = undefined;\r\n    } else if (util.isObject(responseStream)) {\r\n        options = responseStream;\r\n        responseStream = undefined;\r\n    }\r\n\r\n    /* istanbul ignore if */\r\n    if (!(type === undefined || util.isString(type)))\r\n        throw TypeError(\"type must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(requestType))\r\n        throw TypeError(\"requestType must be a string\");\r\n\r\n    /* istanbul ignore if */\r\n    if (!util.isString(responseType))\r\n        throw TypeError(\"responseType must be a string\");\r\n\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /**\r\n     * Method type.\r\n     * @type {string}\r\n     */\r\n    this.type = type || \"rpc\"; // toJSON\r\n\r\n    /**\r\n     * Request type.\r\n     * @type {string}\r\n     */\r\n    this.requestType = requestType; // toJSON, marker\r\n\r\n    /**\r\n     * Whether requests are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.requestStream = requestStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Response type.\r\n     * @type {string}\r\n     */\r\n    this.responseType = responseType; // toJSON\r\n\r\n    /**\r\n     * Whether responses are streamed or not.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.responseStream = responseStream ? true : undefined; // toJSON\r\n\r\n    /**\r\n     * Resolved request type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedRequestType = null;\r\n\r\n    /**\r\n     * Resolved response type.\r\n     * @type {Type|null}\r\n     */\r\n    this.resolvedResponseType = null;\r\n\r\n    /**\r\n     * Comment for this method\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Method descriptor.\r\n * @interface IMethod\r\n * @property {string} [type=\"rpc\"] Method type\r\n * @property {string} requestType Request type\r\n * @property {string} responseType Response type\r\n * @property {boolean} [requestStream=false] Whether requests are streamed\r\n * @property {boolean} [responseStream=false] Whether responses are streamed\r\n * @property {Object.<string,*>} [options] Method options\r\n */\r\n\r\n/**\r\n * Constructs a method from a method descriptor.\r\n * @param {string} name Method name\r\n * @param {IMethod} json Method descriptor\r\n * @returns {Method} Created method\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nMethod.fromJSON = function fromJSON(name, json) {\r\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this method to a method descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IMethod} Method descriptor\r\n */\r\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\r\n        \"requestType\"    , this.requestType,\r\n        \"requestStream\"  , this.requestStream,\r\n        \"responseType\"   , this.responseType,\r\n        \"responseStream\" , this.responseStream,\r\n        \"options\"        , this.options,\r\n        \"comment\"        , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nMethod.prototype.resolve = function resolve() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.resolved)\r\n        return this;\r\n\r\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\r\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\r\n\r\n    return ReflectionObject.prototype.resolve.call(this);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/method.js\n// module id = 25\n// module chunks = 0","\"use strict\";\r\nmodule.exports = decoder;\r\n\r\nvar Enum    = require(\"./enum\"),\r\n    types   = require(\"./types\"),\r\n    util    = require(\"./util\");\r\n\r\nfunction missing(field) {\r\n    return \"missing required '\" + field.name + \"'\";\r\n}\r\n\r\n/**\r\n * Generates a decoder specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction decoder(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\r\n    (\"if(!(r instanceof Reader))\")\r\n        (\"r=Reader.create(r)\")\r\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k\" : \"\"))\r\n    (\"while(r.pos<c){\")\r\n        (\"var t=r.uint32()\");\r\n    if (mtype.group) gen\r\n        (\"if((t&7)===4)\")\r\n            (\"break\");\r\n    gen\r\n        (\"switch(t>>>3){\");\r\n\r\n    var i = 0;\r\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\r\n            ref   = \"m\" + util.safeProp(field.name); gen\r\n            (\"case %i:\", field.id);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n                (\"r.skip().pos++\") // assumes id 1 + key wireType\r\n                (\"if(%s===util.emptyObject)\", ref)\r\n                    (\"%s={}\", ref)\r\n                (\"k=r.%s()\", field.keyType)\r\n                (\"r.pos++\"); // assumes id 2 + value wireType\r\n            if (types.long[field.keyType] !== undefined) {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=r.%s()\", ref, type);\r\n            } else {\r\n                if (types.basic[type] === undefined) gen\r\n                (\"%s[k]=types[%i].decode(r,r.uint32())\", ref, i); // can't be groups\r\n                else gen\r\n                (\"%s[k]=r.%s()\", ref, type);\r\n            }\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n\r\n                (\"if(!(%s&&%s.length))\", ref, ref)\r\n                    (\"%s=[]\", ref);\r\n\r\n            // Packable (always check for forward and backward compatiblity)\r\n            if (types.packed[type] !== undefined) gen\r\n                (\"if((t&7)===2){\")\r\n                    (\"var c2=r.uint32()+r.pos\")\r\n                    (\"while(r.pos<c2)\")\r\n                        (\"%s.push(r.%s())\", ref, type)\r\n                (\"}else\");\r\n\r\n            // Non-packed\r\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                    ? \"%s.push(types[%i].decode(r))\"\r\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\r\n            else gen\r\n                    (\"%s.push(r.%s())\", ref, type);\r\n\r\n        // Non-repeated\r\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\r\n                ? \"%s=types[%i].decode(r)\"\r\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\r\n        else gen\r\n                (\"%s=r.%s()\", ref, type);\r\n        gen\r\n                (\"break\");\r\n    // Unknown fields\r\n    } gen\r\n            (\"default:\")\r\n                (\"r.skipType(t&7)\")\r\n                (\"break\")\r\n\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n    // Field presence\r\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\r\n        var rfield = mtype._fieldsArray[i];\r\n        if (rfield.required) gen\r\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\r\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\r\n    }\r\n\r\n    return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/decoder.js\n// module id = 26\n// module chunks = 0","\"use strict\";\r\nmodule.exports = verifier;\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    util      = require(\"./util\");\r\n\r\nfunction invalid(field, expected) {\r\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\r\n}\r\n\r\n/**\r\n * Generates a partial value verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(%s){\", ref)\r\n                (\"default:\")\r\n                    (\"return%j\", invalid(field, \"enum value\"));\r\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\r\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\r\n            gen\r\n                    (\"break\")\r\n            (\"}\");\r\n        } else {\r\n            gen\r\n            (\"{\")\r\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\r\n                (\"if(e)\")\r\n                    (\"return%j+e\", field.name + \".\")\r\n            (\"}\");\r\n        }\r\n    } else {\r\n        switch (field.type) {\r\n            case \"int32\":\r\n            case \"uint32\":\r\n            case \"sint32\":\r\n            case \"fixed32\":\r\n            case \"sfixed32\": gen\r\n                (\"if(!util.isInteger(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"integer\"));\r\n                break;\r\n            case \"int64\":\r\n            case \"uint64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"integer|Long\"));\r\n                break;\r\n            case \"float\":\r\n            case \"double\": gen\r\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"number\"));\r\n                break;\r\n            case \"bool\": gen\r\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\r\n                    (\"return%j\", invalid(field, \"boolean\"));\r\n                break;\r\n            case \"string\": gen\r\n                (\"if(!util.isString(%s))\", ref)\r\n                    (\"return%j\", invalid(field, \"string\"));\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\r\n                    (\"return%j\", invalid(field, \"buffer\"));\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a partial key verifier.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {string} ref Variable reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genVerifyKey(gen, field, ref) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    switch (field.keyType) {\r\n        case \"int32\":\r\n        case \"uint32\":\r\n        case \"sint32\":\r\n        case \"fixed32\":\r\n        case \"sfixed32\": gen\r\n            (\"if(!util.key32Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"integer key\"));\r\n            break;\r\n        case \"int64\":\r\n        case \"uint64\":\r\n        case \"sint64\":\r\n        case \"fixed64\":\r\n        case \"sfixed64\": gen\r\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\r\n                (\"return%j\", invalid(field, \"integer|Long key\"));\r\n            break;\r\n        case \"bool\": gen\r\n            (\"if(!util.key2Re.test(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"boolean key\"));\r\n            break;\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\r\n\r\n/**\r\n * Generates a verifier specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nfunction verifier(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n\r\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\r\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\r\n        (\"return%j\", \"object expected\");\r\n    var oneofs = mtype.oneofsArray,\r\n        seenFirstField = {};\r\n    if (oneofs.length) gen\r\n    (\"var p={}\");\r\n\r\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\r\n        var field = mtype._fieldsArray[i].resolve(),\r\n            ref   = \"m\" + util.safeProp(field.name);\r\n\r\n        if (field.optional) gen\r\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\r\n\r\n        // map fields\r\n        if (field.map) { gen\r\n            (\"if(!util.isObject(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"object\"))\r\n            (\"var k=Object.keys(%s)\", ref)\r\n            (\"for(var i=0;i<k.length;++i){\");\r\n                genVerifyKey(gen, field, \"k[i]\");\r\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\r\n            (\"}\");\r\n\r\n        // repeated fields\r\n        } else if (field.repeated) { gen\r\n            (\"if(!Array.isArray(%s))\", ref)\r\n                (\"return%j\", invalid(field, \"array\"))\r\n            (\"for(var i=0;i<%s.length;++i){\", ref);\r\n                genVerifyValue(gen, field, i, ref + \"[i]\")\r\n            (\"}\");\r\n\r\n        // required or present fields\r\n        } else {\r\n            if (field.partOf) {\r\n                var oneofProp = util.safeProp(field.partOf.name);\r\n                if (seenFirstField[field.partOf.name] === 1) gen\r\n            (\"if(p%s===1)\", oneofProp)\r\n                (\"return%j\", field.partOf.name + \": multiple values\");\r\n                seenFirstField[field.partOf.name] = 1;\r\n                gen\r\n            (\"p%s=1\", oneofProp);\r\n            }\r\n            genVerifyValue(gen, field, i, ref);\r\n        }\r\n        if (field.optional) gen\r\n        (\"}\");\r\n    }\r\n    return gen\r\n    (\"return null\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/verifier.js\n// module id = 27\n// module chunks = 0","\"use strict\";\r\n/**\r\n * Runtime message from/to plain object converters.\r\n * @namespace\r\n */\r\nvar converter = exports;\r\n\r\nvar Enum = require(\"./enum\"),\r\n    util = require(\"./util\");\r\n\r\n/**\r\n * Generates a partial value fromObject conveter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) { gen\r\n            (\"switch(d%s){\", prop);\r\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\r\n                if (field.repeated && values[keys[i]] === field.typeDefault) gen\r\n                (\"default:\");\r\n                gen\r\n                (\"case%j:\", keys[i])\r\n                (\"case %i:\", values[keys[i]])\r\n                    (\"m%s=%j\", prop, values[keys[i]])\r\n                    (\"break\");\r\n            } gen\r\n            (\"}\");\r\n        } else gen\r\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\r\n                break;\r\n            case \"uint32\":\r\n            case \"fixed32\": gen\r\n                (\"m%s=d%s>>>0\", prop, prop);\r\n                break;\r\n            case \"int32\":\r\n            case \"sint32\":\r\n            case \"sfixed32\": gen\r\n                (\"m%s=d%s|0\", prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n                (\"if(util.Long)\")\r\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\r\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\r\n                    (\"m%s=d%s\", prop, prop)\r\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\r\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\r\n                break;\r\n            case \"bytes\": gen\r\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\r\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\r\n                (\"else if(d%s.length)\", prop)\r\n                    (\"m%s=d%s\", prop, prop);\r\n                break;\r\n            case \"string\": gen\r\n                (\"m%s=String(d%s)\", prop, prop);\r\n                break;\r\n            case \"bool\": gen\r\n                (\"m%s=Boolean(d%s)\", prop, prop);\r\n                break;\r\n            /* default: gen\r\n                (\"m%s=d%s\", prop, prop);\r\n                break; */\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a plain object to runtime message converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.fromObject = function fromObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray;\r\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\r\n    (\"if(d instanceof this.ctor)\")\r\n        (\"return d\");\r\n    if (!fields.length) return gen\r\n    (\"return new this.ctor\");\r\n    gen\r\n    (\"var m=new this.ctor\");\r\n    for (var i = 0; i < fields.length; ++i) {\r\n        var field  = fields[i].resolve(),\r\n            prop   = util.safeProp(field.name);\r\n\r\n        // Map fields\r\n        if (field.map) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\r\n        (\"m%s={}\", prop)\r\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Repeated fields\r\n        } else if (field.repeated) { gen\r\n    (\"if(d%s){\", prop)\r\n        (\"if(!Array.isArray(d%s))\", prop)\r\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\r\n        (\"m%s=[]\", prop)\r\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\r\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\r\n        (\"}\")\r\n    (\"}\");\r\n\r\n        // Non-repeated fields\r\n        } else {\r\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\r\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\r\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\r\n            if (!(field.resolvedType instanceof Enum)) gen\r\n    (\"}\");\r\n        }\r\n    } return gen\r\n    (\"return m\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\r\n/**\r\n * Generates a partial value toObject converter.\r\n * @param {Codegen} gen Codegen instance\r\n * @param {Field} field Reflected field\r\n * @param {number} fieldIndex Field index\r\n * @param {string} prop Property reference\r\n * @returns {Codegen} Codegen instance\r\n * @ignore\r\n */\r\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    if (field.resolvedType) {\r\n        if (field.resolvedType instanceof Enum) gen\r\n            (\"d%s=o.enums===String?types[%i].values[m%s]:m%s\", prop, fieldIndex, prop, prop);\r\n        else gen\r\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\r\n    } else {\r\n        var isUnsigned = false;\r\n        switch (field.type) {\r\n            case \"double\":\r\n            case \"float\": gen\r\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\r\n                break;\r\n            case \"uint64\":\r\n                isUnsigned = true;\r\n                // eslint-disable-line no-fallthrough\r\n            case \"int64\":\r\n            case \"sint64\":\r\n            case \"fixed64\":\r\n            case \"sfixed64\": gen\r\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\r\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\r\n            (\"else\") // Long-like\r\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\r\n                break;\r\n            case \"bytes\": gen\r\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\r\n                break;\r\n            default: gen\r\n            (\"d%s=m%s\", prop, prop);\r\n                break;\r\n        }\r\n    }\r\n    return gen;\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n}\r\n\r\n/**\r\n * Generates a runtime message to plain object converter specific to the specified message type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nconverter.toObject = function toObject(mtype) {\r\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\r\n    if (!fields.length)\r\n        return util.codegen()(\"return {}\");\r\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\r\n    (\"if(!o)\")\r\n        (\"o={}\")\r\n    (\"var d={}\");\r\n\r\n    var repeatedFields = [],\r\n        mapFields = [],\r\n        normalFields = [],\r\n        i = 0;\r\n    for (; i < fields.length; ++i)\r\n        if (!fields[i].partOf)\r\n            ( fields[i].resolve().repeated ? repeatedFields\r\n            : fields[i].map ? mapFields\r\n            : normalFields).push(fields[i]);\r\n\r\n    if (repeatedFields.length) { gen\r\n    (\"if(o.arrays||o.defaults){\");\r\n        for (i = 0; i < repeatedFields.length; ++i) gen\r\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (mapFields.length) { gen\r\n    (\"if(o.objects||o.defaults){\");\r\n        for (i = 0; i < mapFields.length; ++i) gen\r\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\r\n        gen\r\n    (\"}\");\r\n    }\r\n\r\n    if (normalFields.length) { gen\r\n    (\"if(o.defaults){\");\r\n        for (i = 0; i < normalFields.length; ++i) {\r\n            var field = normalFields[i],\r\n                prop  = util.safeProp(field.name);\r\n            if (field.resolvedType instanceof Enum) gen\r\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\r\n            else if (field.long) gen\r\n        (\"if(util.Long){\")\r\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\r\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\r\n        (\"}else\")\r\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\r\n            else if (field.bytes) gen\r\n        (\"d%s=o.bytes===String?%j:%s\", prop, String.fromCharCode.apply(String, field.typeDefault), \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\");\r\n            else gen\r\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\r\n        } gen\r\n    (\"}\");\r\n    }\r\n    var hasKs2 = false;\r\n    for (i = 0; i < fields.length; ++i) {\r\n        var field = fields[i],\r\n            index = mtype._fieldsArray.indexOf(field),\r\n            prop  = util.safeProp(field.name);\r\n        if (field.map) {\r\n            if (!hasKs2) { hasKs2 = true; gen\r\n    (\"var ks2\");\r\n            } gen\r\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\r\n        (\"d%s={}\", prop)\r\n        (\"for(var j=0;j<ks2.length;++j){\");\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\r\n        (\"}\");\r\n        } else if (field.repeated) { gen\r\n    (\"if(m%s&&m%s.length){\", prop, prop)\r\n        (\"d%s=[]\", prop)\r\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\r\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\r\n        (\"}\");\r\n        } else { gen\r\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\r\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\r\n        if (field.partOf) gen\r\n        (\"if(o.oneofs)\")\r\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\r\n        }\r\n        gen\r\n    (\"}\");\r\n    }\r\n    return gen\r\n    (\"return d\");\r\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/converter.js\n// module id = 28\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * Wrappers for common types.\r\n * @type {Object.<string,IWrapper>}\r\n * @const\r\n */\r\nvar wrappers = exports;\r\n\r\nvar Message = require(\"./message\");\r\n\r\n/**\r\n * From object converter part of an {@link IWrapper}.\r\n * @typedef WrapperFromObjectConverter\r\n * @type {function}\r\n * @param {Object.<string,*>} object Plain object\r\n * @returns {Message<{}>} Message instance\r\n * @this Type\r\n */\r\n\r\n/**\r\n * To object converter part of an {@link IWrapper}.\r\n * @typedef WrapperToObjectConverter\r\n * @type {function}\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n * @this Type\r\n */\r\n\r\n/**\r\n * Common type wrapper part of {@link wrappers}.\r\n * @interface IWrapper\r\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\r\n * @property {WrapperToObjectConverter} [toObject] To object converter\r\n */\r\n\r\n// Custom wrapper for Any\r\nwrappers[\".google.protobuf.Any\"] = {\r\n\r\n    fromObject: function(object) {\r\n\r\n        // unwrap value type if mapped\r\n        if (object && object[\"@type\"]) {\r\n            var type = this.lookup(object[\"@type\"]);\r\n            /* istanbul ignore else */\r\n            if (type) {\r\n                // type_url does not accept leading \".\"\r\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\r\n                    object[\"@type\"].substr(1) : object[\"@type\"];\r\n                // type_url prefix is optional, but path seperator is required\r\n                return this.create({\r\n                    type_url: \"/\" + type_url,\r\n                    value: type.encode(type.fromObject(object)).finish()\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.fromObject(object);\r\n    },\r\n\r\n    toObject: function(message, options) {\r\n\r\n        // decode value if requested and unmapped\r\n        if (options && options.json && message.type_url && message.value) {\r\n            // Only use fully qualified type name after the last '/'\r\n            var name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\r\n            var type = this.lookup(name);\r\n            /* istanbul ignore else */\r\n            if (type)\r\n                message = type.decode(message.value);\r\n        }\r\n\r\n        // wrap value if unmapped\r\n        if (!(message instanceof this.ctor) && message instanceof Message) {\r\n            var object = message.$type.toObject(message, options);\r\n            object[\"@type\"] = message.$type.fullName;\r\n            return object;\r\n        }\r\n\r\n        return this.toObject(message, options);\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/wrappers.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Root;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\r\n\r\nvar Field   = require(\"./field\"),\r\n    Enum    = require(\"./enum\"),\r\n    OneOf   = require(\"./oneof\"),\r\n    util    = require(\"./util\");\r\n\r\nvar Type,   // cyclic\r\n    parse,  // might be excluded\r\n    common; // \"\r\n\r\n/**\r\n * Constructs a new root namespace instance.\r\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {Object.<string,*>} [options] Top level options\r\n */\r\nfunction Root(options) {\r\n    Namespace.call(this, \"\", options);\r\n\r\n    /**\r\n     * Deferred extension fields.\r\n     * @type {Field[]}\r\n     */\r\n    this.deferred = [];\r\n\r\n    /**\r\n     * Resolved file names of loaded files.\r\n     * @type {string[]}\r\n     */\r\n    this.files = [];\r\n}\r\n\r\n/**\r\n * Loads a namespace descriptor into a root namespace.\r\n * @param {INamespace} json Nameespace descriptor\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\r\n * @returns {Root} Root namespace\r\n */\r\nRoot.fromJSON = function fromJSON(json, root) {\r\n    if (!root)\r\n        root = new Root();\r\n    if (json.options)\r\n        root.setOptions(json.options);\r\n    return root.addJSON(json.nested);\r\n};\r\n\r\n/**\r\n * Resolves the path of an imported file, relative to the importing origin.\r\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\r\n * @function\r\n * @param {string} origin The file name of the importing file\r\n * @param {string} target The file name being imported\r\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\r\n */\r\nRoot.prototype.resolvePath = util.path.resolve;\r\n\r\n// A symbol-like function to safely signal synchronous loading\r\n/* istanbul ignore next */\r\nfunction SYNC() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} options Parse options\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nRoot.prototype.load = function load(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = undefined;\r\n    }\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(load, self, filename, options);\r\n\r\n    var sync = callback === SYNC; // undocumented\r\n\r\n    // Finishes loading by calling the callback (exactly once)\r\n    function finish(err, root) {\r\n        /* istanbul ignore if */\r\n        if (!callback)\r\n            return;\r\n        var cb = callback;\r\n        callback = null;\r\n        if (sync)\r\n            throw err;\r\n        cb(err, root);\r\n    }\r\n\r\n    // Processes a single file\r\n    function process(filename, source) {\r\n        try {\r\n            if (util.isString(source) && source.charAt(0) === \"{\")\r\n                source = JSON.parse(source);\r\n            if (!util.isString(source))\r\n                self.setOptions(source.options).addJSON(source.nested);\r\n            else {\r\n                parse.filename = filename;\r\n                var parsed = parse(source, self, options),\r\n                    resolved,\r\n                    i = 0;\r\n                if (parsed.imports)\r\n                    for (; i < parsed.imports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.imports[i]))\r\n                            fetch(resolved);\r\n                if (parsed.weakImports)\r\n                    for (i = 0; i < parsed.weakImports.length; ++i)\r\n                        if (resolved = self.resolvePath(filename, parsed.weakImports[i]))\r\n                            fetch(resolved, true);\r\n            }\r\n        } catch (err) {\r\n            finish(err);\r\n        }\r\n        if (!sync && !queued)\r\n            finish(null, self); // only once anyway\r\n    }\r\n\r\n    // Fetches a single file\r\n    function fetch(filename, weak) {\r\n\r\n        // Strip path if this file references a bundled definition\r\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\r\n        if (idx > -1) {\r\n            var altname = filename.substring(idx);\r\n            if (altname in common)\r\n                filename = altname;\r\n        }\r\n\r\n        // Skip if already loaded / attempted\r\n        if (self.files.indexOf(filename) > -1)\r\n            return;\r\n        self.files.push(filename);\r\n\r\n        // Shortcut bundled definitions\r\n        if (filename in common) {\r\n            if (sync)\r\n                process(filename, common[filename]);\r\n            else {\r\n                ++queued;\r\n                setTimeout(function() {\r\n                    --queued;\r\n                    process(filename, common[filename]);\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Otherwise fetch from disk or network\r\n        if (sync) {\r\n            var source;\r\n            try {\r\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\r\n            } catch (err) {\r\n                if (!weak)\r\n                    finish(err);\r\n                return;\r\n            }\r\n            process(filename, source);\r\n        } else {\r\n            ++queued;\r\n            util.fetch(filename, function(err, source) {\r\n                --queued;\r\n                /* istanbul ignore if */\r\n                if (!callback)\r\n                    return; // terminated meanwhile\r\n                if (err) {\r\n                    /* istanbul ignore else */\r\n                    if (!weak)\r\n                        finish(err);\r\n                    else if (!queued) // can't be covered reliably\r\n                        finish(null, self);\r\n                    return;\r\n                }\r\n                process(filename, source);\r\n            });\r\n        }\r\n    }\r\n    var queued = 0;\r\n\r\n    // Assembling the root namespace doesn't require working type\r\n    // references anymore, so we can load everything in parallel\r\n    if (util.isString(filename))\r\n        filename = [ filename ];\r\n    for (var i = 0, resolved; i < filename.length; ++i)\r\n        if (resolved = self.resolvePath(\"\", filename[i]))\r\n            fetch(resolved);\r\n\r\n    if (sync)\r\n        return self;\r\n    if (!queued)\r\n        finish(null, self);\r\n    return undefined;\r\n};\r\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\r\n * @function Root#load\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @variation 3\r\n */\r\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\r\n * @function Root#loadSync\r\n * @param {string|string[]} filename Names of one or multiple files to load\r\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n */\r\nRoot.prototype.loadSync = function loadSync(filename, options) {\r\n    if (!util.isNode)\r\n        throw Error(\"not supported\");\r\n    return this.load(filename, options, SYNC);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nRoot.prototype.resolveAll = function resolveAll() {\r\n    if (this.deferred.length)\r\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\r\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\r\n        }).join(\", \"));\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n// only uppercased (and thus conflict-free) children are exposed, see below\r\nvar exposeRe = /^[A-Z]/;\r\n\r\n/**\r\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\r\n * @param {Root} root Root instance\r\n * @param {Field} field Declaring extension field witin the declaring type\r\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\r\n * @inner\r\n * @ignore\r\n */\r\nfunction tryHandleExtension(root, field) {\r\n    var extendedType = field.parent.lookup(field.extend);\r\n    if (extendedType) {\r\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\r\n        sisterField.declaringField = field;\r\n        field.extensionField = sisterField;\r\n        extendedType.add(sisterField);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Called when any object is added to this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object added\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleAdd = function _handleAdd(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\r\n            if (!tryHandleExtension(this, object))\r\n                this.deferred.push(object);\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\r\n\r\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\r\n\r\n        if (object instanceof Type) // Try to handle any deferred extensions\r\n            for (var i = 0; i < this.deferred.length;)\r\n                if (tryHandleExtension(this, this.deferred[i]))\r\n                    this.deferred.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\r\n            this._handleAdd(object._nestedArray[j]);\r\n        if (exposeRe.test(object.name))\r\n            object.parent[object.name] = object; // expose namespace as property of its parent\r\n    }\r\n\r\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\r\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\r\n    // a static module with reflection-based solutions where the condition is met.\r\n};\r\n\r\n/**\r\n * Called when any object is removed from this root or its sub-namespaces.\r\n * @param {ReflectionObject} object Object removed\r\n * @returns {undefined}\r\n * @private\r\n */\r\nRoot.prototype._handleRemove = function _handleRemove(object) {\r\n    if (object instanceof Field) {\r\n\r\n        if (/* an extension field */ object.extend !== undefined) {\r\n            if (/* already handled */ object.extensionField) { // remove its sister field\r\n                object.extensionField.parent.remove(object.extensionField);\r\n                object.extensionField = null;\r\n            } else { // cancel the extension\r\n                var index = this.deferred.indexOf(object);\r\n                /* istanbul ignore else */\r\n                if (index > -1)\r\n                    this.deferred.splice(index, 1);\r\n            }\r\n        }\r\n\r\n    } else if (object instanceof Enum) {\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose enum values\r\n\r\n    } else if (object instanceof Namespace) {\r\n\r\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\r\n            this._handleRemove(object._nestedArray[i]);\r\n\r\n        if (exposeRe.test(object.name))\r\n            delete object.parent[object.name]; // unexpose namespaces\r\n\r\n    }\r\n};\r\n\r\nRoot._configure = function(Type_, parse_, common_) {\r\n    Type = Type_;\r\n    parse = parse_;\r\n    common = common_;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/root.js\n// module id = 30\n// module chunks = 0","import {CentrifugeProtobuf} from './protobuf.js';\nexport default CentrifugeProtobuf;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index_protobuf.js","import {Centrifuge} from './centrifuge.js';\n\nconst protobuf = require('protobufjs/light');\nconst proto = protobuf.Root.fromJSON(require('./client.proto.json'));\n\nconst methodValues = proto.lookupEnum('MethodType').values;\n\nconst protobufMethodType = {\n  CONNECT: methodValues.CONNECT,\n  SUBSCRIBE: methodValues.SUBSCRIBE,\n  UNSUBSCRIBE: methodValues.UNSUBSCRIBE,\n  PUBLISH: methodValues.PUBLISH,\n  PRESENCE: methodValues.PRESENCE,\n  PRESENCE_STATS: methodValues.PRESENCE_STATS,\n  HISTORY: methodValues.HISTORY,\n  PING: methodValues.PING,\n  RPC: methodValues.RPC,\n  SEND: methodValues.SEND,\n  REFRESH: methodValues.REFRESH,\n  SUB_REFRESH: methodValues.SUB_REFRESH\n};\n\nconst methodSchema = {\n  CONNECT: [\n    proto.lookupType('proto.ConnectRequest'),\n    proto.lookupType('proto.ConnectResult')\n  ],\n  REFRESH: [\n    proto.lookupType('proto.RefreshRequest'),\n    proto.lookupType('proto.RefreshResult')\n  ],\n  SUBSCRIBE: [\n    proto.lookupType('proto.SubscribeRequest'),\n    proto.lookupType('proto.SubscribeResult')\n  ],\n  SUB_REFRESH: [\n    proto.lookupType('proto.SubRefreshRequest'),\n    proto.lookupType('proto.SubRefreshResult')\n  ],\n  UNSUBSCRIBE: [\n    proto.lookupType('proto.UnsubscribeRequest'),\n    proto.lookupType('proto.UnsubscribeResult')\n  ],\n  PUBLISH: [\n    proto.lookupType('proto.PublishRequest'),\n    proto.lookupType('proto.PublishResult')\n  ],\n  PRESENCE: [\n    proto.lookupType('proto.PresenceRequest'),\n    proto.lookupType('proto.PresenceResult')\n  ],\n  PRESENCE_STATS: [\n    proto.lookupType('proto.PresenceStatsRequest'),\n    proto.lookupType('proto.PresenceStatsResult')\n  ],\n  HISTORY: [\n    proto.lookupType('proto.HistoryRequest'),\n    proto.lookupType('proto.HistoryResult')\n  ],\n  PING: [\n    proto.lookupType('proto.PingRequest'),\n    proto.lookupType('proto.PingResult')\n  ],\n  RPC: [\n    proto.lookupType('proto.RPCRequest'),\n    proto.lookupType('proto.RPCResult')\n  ],\n  SEND: [\n    proto.lookupType('proto.SendRequest'),\n    null\n  ]\n};\n\nconst protobufPushType = {\n  PUBLICATION: proto.lookupEnum('PushType').values.PUBLICATION,\n  JOIN: proto.lookupEnum('PushType').values.JOIN,\n  LEAVE: proto.lookupEnum('PushType').values.LEAVE,\n  UNSUB: proto.lookupEnum('PushType').values.UNSUB,\n  MESSAGE: proto.lookupEnum('PushType').values.MESSAGE\n};\n\nconst PushSchema = {\n  PUBLICATION: proto.lookupType('proto.Publication'),\n  JOIN: proto.lookupType('proto.Join'),\n  LEAVE: proto.lookupType('proto.Leave'),\n  UNSUB: proto.lookupType('proto.Unsub'),\n  MESSAGE: proto.lookupType('proto.Message')\n};\n\nconst Push = proto.lookupType('proto.Push');\nconst Command = proto.lookupType('proto.Command');\nconst Reply = proto.lookupType('proto.Reply');\n\nexport class ProtobufEncoder {\n  encodeCommands(commands) {\n    const writer = protobuf.Writer.create();\n    for (const i in commands) {\n      if (commands.hasOwnProperty(i)) {\n        const command = Object.assign({}, commands[i]);\n        if (command.params) {\n          let type;\n          if (!command.method) {\n            command.method = protobufMethodType.CONNECT;\n          };\n          switch (command.method) {\n            case protobufMethodType.CONNECT:\n              type = methodSchema.CONNECT[0];\n              break;\n            case protobufMethodType.REFRESH:\n              type = methodSchema.REFRESH;\n              break;\n            case protobufMethodType.SUBSCRIBE:\n              type = methodSchema.SUBSCRIBE[0];\n              break;\n            case protobufMethodType.SUB_REFRESH:\n              type = methodSchema.SUB_REFRESH[0];\n              break;\n            case protobufMethodType.UNSUBSCRIBE:\n              type = methodSchema.UNSUBSCRIBE[0];\n              break;\n            case protobufMethodType.PUBLISH:\n              type = methodSchema.PUBLISH[0];\n              break;\n            case protobufMethodType.PRESENCE:\n              type = methodSchema.PRESENCE[0];\n              break;\n            case protobufMethodType.PRESENCE_STATS:\n              type = methodSchema.PRESENCE_STATS[0];\n              break;\n            case protobufMethodType.HISTORY:\n              type = methodSchema.HISTORY[0];\n              break;\n            case protobufMethodType.PING:\n              type = methodSchema.PING[0];\n              break;\n            case protobufMethodType.RPC:\n              type = methodSchema.RPC[0];\n              break;\n            case protobufMethodType.SEND:\n              type = methodSchema.SEND[0];\n              break;\n          }\n          command.params = type.encode(command.params).finish();\n        }\n        Command.encodeDelimited(command, writer);\n      }\n    }\n    return writer.finish();\n  }\n}\n\nexport class ProtobufDecoder {\n  decodeReplies(data) {\n    const replies = [];\n    const reader = protobuf.Reader.create(new Uint8Array(data));\n    while (reader.pos < reader.len) {\n      const reply = Reply.decodeDelimited(reader);\n      replies.push(reply);\n    }\n    return replies;\n  }\n\n  decodeCommandResult(methodType, data) {\n    var type;\n    switch (methodType) {\n      case protobufMethodType.CONNECT:\n        type = methodSchema.CONNECT[1];\n        break;\n      case protobufMethodType.REFRESH:\n        type = methodSchema.REFRESH[1];\n        break;\n      case protobufMethodType.SUBSCRIBE:\n        type = methodSchema.SUBSCRIBE[1];\n        break;\n      case protobufMethodType.SUB_REFRESH:\n        type = methodSchema.SUB_REFRESH[1];\n        break;\n      case protobufMethodType.UNSUBSCRIBE:\n        type = methodSchema.UNSUBSCRIBE[1];\n        break;\n      case protobufMethodType.PUBLISH:\n        type = methodSchema.PUBLISH[1];\n        break;\n      case protobufMethodType.PRESENCE:\n        type = methodSchema.PRESENCE[1];\n        break;\n      case protobufMethodType.PRESENCE_STATS:\n        type = methodSchema.PRESENCE_STATS[1];\n        break;\n      case protobufMethodType.HISTORY:\n        type = methodSchema.HISTORY[1];\n        break;\n      case protobufMethodType.PING:\n        type = methodSchema.PING[1];\n        break;\n      case protobufMethodType.RPC:\n        type = methodSchema.RPC[1];\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  decodePush(data) {\n    return this._decode(Push, data);\n  }\n\n  decodePushData(pushType, data) {\n    var type;\n    switch (pushType) {\n      case protobufPushType.PUBLICATION:\n        type = PushSchema.PUBLICATION;\n        break;\n      case protobufPushType.MESSAGE:\n        type = PushSchema.MESSAGE;\n        break;\n      case protobufPushType.JOIN:\n        type = PushSchema.JOIN;\n        break;\n      case protobufPushType.LEAVE:\n        type = PushSchema.LEAVE;\n        break;\n      case protobufPushType.UNSUB:\n        type = PushSchema.UNSUB;\n        break;\n    }\n    return this._decode(type, data);\n  }\n\n  _decode(type, data) {\n    let res;\n    try {\n      res = type.decode(data);\n    } catch (err) {\n      return null;\n    }\n    return res;\n  }\n}\n\nexport class CentrifugeProtobuf extends Centrifuge {\n  _formatOverride(format) {\n    if (format === 'protobuf') {\n      this._binary = true;\n      this._methodType = protobufMethodType;\n      this._pushType = protobufPushType;\n      this._encoder = new ProtobufEncoder();\n      this._decoder = new ProtobufDecoder();\n      return true;\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/protobuf.js","// light library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-light\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/light.js\n// module id = 34\n// module chunks = 0","\"use strict\";\r\nvar protobuf = module.exports = require(\"./index-minimal\");\r\n\r\nprotobuf.build = \"light\";\r\n\r\n/**\r\n * A node-style callback as used by {@link load} and {@link Root#load}.\r\n * @typedef LoadCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Root} [root] Root, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n */\r\nfunction load(filename, root, callback) {\r\n    if (typeof root === \"function\") {\r\n        callback = root;\r\n        root = new protobuf.Root();\r\n    } else if (!root)\r\n        root = new protobuf.Root();\r\n    return root.load(filename, callback);\r\n}\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {LoadCallback} callback Callback function\r\n * @returns {undefined}\r\n * @see {@link Root#load}\r\n * @variation 2\r\n */\r\n// function load(filename:string, callback:LoadCallback):undefined\r\n\r\n/**\r\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\r\n * @name load\r\n * @function\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Promise<Root>} Promise\r\n * @see {@link Root#load}\r\n * @variation 3\r\n */\r\n// function load(filename:string, [root:Root]):Promise<Root>\r\n\r\nprotobuf.load = load;\r\n\r\n/**\r\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\r\n * @param {string|string[]} filename One or multiple files to load\r\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\r\n * @returns {Root} Root namespace\r\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\r\n * @see {@link Root#loadSync}\r\n */\r\nfunction loadSync(filename, root) {\r\n    if (!root)\r\n        root = new protobuf.Root();\r\n    return root.loadSync(filename);\r\n}\r\n\r\nprotobuf.loadSync = loadSync;\r\n\r\n// Serialization\r\nprotobuf.encoder          = require(\"./encoder\");\r\nprotobuf.decoder          = require(\"./decoder\");\r\nprotobuf.verifier         = require(\"./verifier\");\r\nprotobuf.converter        = require(\"./converter\");\r\n\r\n// Reflection\r\nprotobuf.ReflectionObject = require(\"./object\");\r\nprotobuf.Namespace        = require(\"./namespace\");\r\nprotobuf.Root             = require(\"./root\");\r\nprotobuf.Enum             = require(\"./enum\");\r\nprotobuf.Type             = require(\"./type\");\r\nprotobuf.Field            = require(\"./field\");\r\nprotobuf.OneOf            = require(\"./oneof\");\r\nprotobuf.MapField         = require(\"./mapfield\");\r\nprotobuf.Service          = require(\"./service\");\r\nprotobuf.Method           = require(\"./method\");\r\n\r\n// Runtime\r\nprotobuf.Message          = require(\"./message\");\r\nprotobuf.wrappers         = require(\"./wrappers\");\r\n\r\n// Utility\r\nprotobuf.types            = require(\"./types\");\r\nprotobuf.util             = require(\"./util\");\r\n\r\n// Configure reflection\r\nprotobuf.ReflectionObject._configure(protobuf.Root);\r\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service);\r\nprotobuf.Root._configure(protobuf.Type);\r\nprotobuf.Field._configure(protobuf.Type);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-light.js\n// module id = 35\n// module chunks = 0","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/index-minimal.js\n// module id = 36\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/base64/index.js\n// module id = 37\n// module chunks = 0","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/eventemitter/index.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/float/index.js\n// module id = 39\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/utf8/index.js\n// module id = 40\n// module chunks = 0","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/pool/index.js\n// module id = 41\n// module chunks = 0","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/util/longbits.js\n// module id = 42\n// module chunks = 0","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/writer_buffer.js\n// module id = 43\n// module chunks = 0","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/reader_buffer.js\n// module id = 44\n// module chunks = 0","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/protobufjs/src/rpc/service.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/codegen/index.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/fetch/index.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@protobufjs/path/index.js\n// module id = 48\n// module chunks = 0","module.exports = {\"nested\":{\"proto\":{\"nested\":{\"Error\":{\"fields\":{\"code\":{\"type\":\"uint32\",\"id\":1},\"message\":{\"type\":\"string\",\"id\":2}}},\"MethodType\":{\"values\":{\"CONNECT\":0,\"SUBSCRIBE\":1,\"UNSUBSCRIBE\":2,\"PUBLISH\":3,\"PRESENCE\":4,\"PRESENCE_STATS\":5,\"HISTORY\":6,\"PING\":7,\"SEND\":8,\"RPC\":9,\"REFRESH\":10,\"SUB_REFRESH\":11}},\"Command\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"method\":{\"type\":\"MethodType\",\"id\":2},\"params\":{\"type\":\"bytes\",\"id\":3}}},\"Reply\":{\"fields\":{\"id\":{\"type\":\"uint32\",\"id\":1},\"error\":{\"type\":\"Error\",\"id\":2},\"result\":{\"type\":\"bytes\",\"id\":3}}},\"PushType\":{\"values\":{\"PUBLICATION\":0,\"JOIN\":1,\"LEAVE\":2,\"UNSUB\":3,\"MESSAGE\":4}},\"Push\":{\"fields\":{\"type\":{\"type\":\"PushType\",\"id\":1},\"channel\":{\"type\":\"string\",\"id\":2},\"data\":{\"type\":\"bytes\",\"id\":3}}},\"ClientInfo\":{\"fields\":{\"user\":{\"type\":\"string\",\"id\":1},\"client\":{\"type\":\"string\",\"id\":2},\"connInfo\":{\"type\":\"bytes\",\"id\":3},\"chanInfo\":{\"type\":\"bytes\",\"id\":4}}},\"Publication\":{\"fields\":{\"seq\":{\"type\":\"uint32\",\"id\":1},\"gen\":{\"type\":\"uint32\",\"id\":2},\"uid\":{\"type\":\"string\",\"id\":3},\"data\":{\"type\":\"bytes\",\"id\":4},\"info\":{\"type\":\"ClientInfo\",\"id\":5}}},\"Join\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Leave\":{\"fields\":{\"info\":{\"type\":\"ClientInfo\",\"id\":1}}},\"Unsub\":{\"fields\":{\"resubscribe\":{\"type\":\"bool\",\"id\":1}}},\"Message\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"ConnectRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"ConnectResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4},\"data\":{\"type\":\"bytes\",\"id\":5}}},\"RefreshRequest\":{\"fields\":{\"token\":{\"type\":\"string\",\"id\":1}}},\"RefreshResult\":{\"fields\":{\"client\":{\"type\":\"string\",\"id\":1},\"version\":{\"type\":\"string\",\"id\":2},\"expires\":{\"type\":\"bool\",\"id\":3},\"ttl\":{\"type\":\"uint32\",\"id\":4}}},\"SubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2},\"recover\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6}}},\"SubscribeResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2},\"recoverable\":{\"type\":\"bool\",\"id\":3},\"seq\":{\"type\":\"uint32\",\"id\":4},\"gen\":{\"type\":\"uint32\",\"id\":5},\"epoch\":{\"type\":\"string\",\"id\":6},\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":7},\"recovered\":{\"type\":\"bool\",\"id\":8}}},\"SubRefreshRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"token\":{\"type\":\"string\",\"id\":2}}},\"SubRefreshResult\":{\"fields\":{\"expires\":{\"type\":\"bool\",\"id\":1},\"ttl\":{\"type\":\"uint32\",\"id\":2}}},\"UnsubscribeRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"UnsubscribeResult\":{\"fields\":{}},\"PublishRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1},\"data\":{\"type\":\"bytes\",\"id\":2}}},\"PublishResult\":{\"fields\":{}},\"PresenceRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceResult\":{\"fields\":{\"presence\":{\"keyType\":\"string\",\"type\":\"ClientInfo\",\"id\":1}}},\"PresenceStatsRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"PresenceStatsResult\":{\"fields\":{\"numClients\":{\"type\":\"uint32\",\"id\":1},\"numUsers\":{\"type\":\"uint32\",\"id\":2}}},\"HistoryRequest\":{\"fields\":{\"channel\":{\"type\":\"string\",\"id\":1}}},\"HistoryResult\":{\"fields\":{\"publications\":{\"rule\":\"repeated\",\"type\":\"Publication\",\"id\":1}}},\"PingRequest\":{\"fields\":{}},\"PingResult\":{\"fields\":{}},\"RPCRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"RPCResult\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}},\"SendRequest\":{\"fields\":{\"data\":{\"type\":\"bytes\",\"id\":1}}}}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.proto.json\n// module id = 49\n// module chunks = 0"],"sourceRoot":""}